<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GCCSSDK</name>
    </assembly>
    <members>
        <member name="T:GrandCloud.CS.Model.GetObjectMetadataResponse">
            <summary>
            The GetObjectMetadataResponse contains any headers returned by CS.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CSResponse">
            <summary>
            Base class for all CS operation responses. 
            Provides a header collection which is used to store the response headers.
            Also exposes the RequestId and AmazonId2 from CS responses, as well as a 
            Response Stream is the operation returned a stream. 
            Lastly, if the response contained metadata, they are stored in the Metadata
            collection.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.CSResponse.webHeaders">
            <summary>
            web headers for all requests.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.CSResponse.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.CSResponse.Finalize">
            <summary>
            The destructor for the CSResponse class.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.CSResponse.ToString">
            <summary>
            String Representation of this object. Overrides Object.ToString()
            </summary>
            <returns>This object as a string</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSResponse.ProcessResponseBody(System.String)">
            <summary>
            A blank virtual method to allow sub classes to provide
            custom response body parsing.
            </summary>
            <param name="responseBody">The response from a request to CS</param>
        </member>
        <member name="P:GrandCloud.CS.Model.CSResponse.RequestId">
            <summary>
            Gets and sets the RequestId property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSResponse.ResponseStream">
            <summary>
            Gets and sets the ResponseStream property. This property
            only has a valid value for GetObjectResponses. In order to
            use this stream without leaking the underlying resource, please
            wrap access to the stream within a using block.
            <code></code>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSResponse.Headers">
            <summary>
            Gets and sets the Headers property.
            Information like the request-id, the amz-id-2 are
            retrieved fro the Headers and presented to the user
            via properties of the response object.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSResponse.Metadata">
            <summary>
            Gets and sets the Metadata property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSResponse.ResponseXml">
            <summary>
            Gets and sets the ResponseXml property. This is the 
            original xml response received from CS
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataResponse.LastModified">
            <summary>
            Gets and sets the lastModified property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataResponse.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataResponse.ContentType">
            <summary>
            Gets and sets the ContentType property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataResponse.ContentLength">
            <summary>
            Gets and sets the ContentLength property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataResponse.Headers">
            <summary>
            Gets and sets the Headers property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CSRequest">
            <summary>
            Base class for all CS operation requests.
            Provides a header collection which can is used to store the request headers.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.CSRequest.IsSetHeaders">
            <summary>
            Checks if Headers property is set
            </summary>
            <returns>true if Headers property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSRequest.AddHeaders(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds all of the key/value pairs from collection into our request header.
            </summary>
            <param name="collection">A collection of key/value headers</param>
        </member>
        <member name="M:GrandCloud.CS.Model.CSRequest.AddHeader(System.String,System.String)">
            <summary>
            Adds the header to the collection of headers for the request.
            </summary>
            <param name="key">The name of the header for example Content-Disposition.</param>
            <param name="value">The value to be set for the header.</param>
        </member>
        <member name="M:GrandCloud.CS.Model.CSRequest.WithInputStream(System.IO.Stream)">
            <summary>
            Sets the InputStream property.
            </summary>
            <param name="inputStream">InputStream property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSRequest.IsSetInputStream">
            <summary>
            Checks if InputStream property is set.
            </summary>
            <returns>true if InputStream property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.CSRequest.Headers">
            <summary>
            Gets the Headers property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSRequest.InputStream">
            <summary>
            Gets and sets the InputStream property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Util.CSSDKUtils">
            <summary>
            This class defines utilities and constants that can be used by 
            all the client libraries of the SDK.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.ValidUrlCharacters">
            <summary>
            The Set of accepted and valid Url characters. 
            Characters outside of this set will be encoded
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.UrlEncodedContent">
            <summary>
            The string representing Url Encoded Content in HTTP requests
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.GMTDateFormat">
            <summary>
            The GMT Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.ISO8601DateFormat">
            <summary>
            The ISO8601Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.ISO8601DateFormatNoMS">
            <summary>
            The ISO8601Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.ISO8601BasicDateTimeFormat">
            <summary>
            The ISO8601 Basic date/time format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.RFC822DateFormat">
            <summary>
            The RFC822Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.ISO8601DateFormatWithUTCOffset">
            <summary>
            The ISO8601 Date format string with time offset with UTC. Used when parsing date objects
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Util.CSSDKUtils.typeToXslCompiledTransform">
            Convert Dictionary of paremeters to Url encoded query string
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.PreserveStackTrace(System.Exception)">
            <summary>
            This method is used preserve the stacktrace used from clients that support async calls.  This 
            make sure that exceptions thrown during EndXXX methods has the orignal stacktrace that happen 
            in the background thread.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.Join(System.Collections.Generic.List{System.String})">
            <summary>
            Returns a new string created by joining each of the strings in the
            specified list together, with a comma between them.
            </summary>
            <parma name="strings">The list of strings to join into a single, comma delimited
            string list.</parma>
            <returns> A new string created by joining each of the strings in the
            specified list together, with a comma between strings.</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.GetConnectionLimit(System.Nullable{System.Int32})">
            <summary>
            Utilitly method for converting Unix epoch seconds to DateTime structure.
            </summary>
            <param name="seconds">The number of seconds since January 1, 1970.</param>
            <returns>Converted DateTime structure</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.GetFormattedTimestampISO8601(System.Int32)">
            <summary>
            Gets the ISO8601 formatted timestamp that is minutesFromNow
            in the future.
            </summary>
            <param name="minutesFromNow">The number of minutes from the current instant
            for which the timestamp is needed.</param>
            <returns>The ISO8601 formatted future timestamp.</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.GetFormattedTimestampRFC822(System.Int32)">
            <summary>
            Gets the RFC822 formatted timestamp that is minutesFromNow
            in the future.
            </summary>
            <param name="minutesFromNow">The number of minutes from the current instant
            for which the timestamp is needed.</param>
            <returns>The ISO8601 formatted future timestamp.</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.HMACSign(System.String,System.Security.SecureString,System.Security.Cryptography.KeyedHashAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature
            </summary>
            <param name="data">The data to be signed</param>
            <param name="key">The secret signing key</param>
            <param name="algorithm">The algorithm to sign the data with</param>
            <exception cref="T:System.ArgumentNullException"/>
            <returns>A string representing the HMAC signature</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.HMACSign(System.Byte[],System.Security.SecureString,System.Security.Cryptography.KeyedHashAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature
            </summary>
            <param name="data">The data to be signed</param>
            <param name="key">The secret signing key</param>
            <param name="algorithm">The algorithm to sign the data with</param>
            <exception cref="T:System.ArgumentNullException"/>
            <returns>A string representing the HMAC signature</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.HMACSign(System.String,System.String,System.Security.Cryptography.KeyedHashAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature
            </summary>
            <param name="data">The data to be signed</param>
            <param name="key">The secret signing key</param>
            <param name="algorithm">The algorithm to sign the data with</param>
            <exception cref="T:System.ArgumentNullException"/>
            <returns>A string representing the HMAC signature</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.HMACSign(System.Byte[],System.String,System.Security.Cryptography.KeyedHashAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature
            </summary>
            <param name="data">The data to be signed</param>
            <param name="key">The secret signing key</param>
            <param name="algorithm">The algorithm to sign the data with</param>
            <exception cref="T:System.ArgumentNullException"/>
            <returns>A string representing the HMAC signature</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.CSSDKUtils.UrlEncode(System.String,System.Boolean)">
            <summary>
            URL encodes a string. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns></returns>
        </member>
        <member name="P:GrandCloud.CS.Util.CSSDKUtils.SDKUserAgent">
            <summary>
            The AWS SDK User Agent
            </summary>        
        </member>
        <member name="P:GrandCloud.CS.Util.CSSDKUtils.FormattedCurrentTimestampGMT">
            <summary>
            Formats the current date as a GMT timestamp
            </summary>
            <returns>A GMT formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="P:GrandCloud.CS.Util.CSSDKUtils.FormattedCurrentTimestampISO8601">
            <summary>
            Formats the current date as ISO 8601 timestamp
            </summary>
            <returns>An ISO 8601 formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="P:GrandCloud.CS.Util.CSSDKUtils.FormattedCurrentTimestampRFC822">
            <summary>
            Formats the current date as ISO 8601 timestamp
            </summary>
            <returns>An ISO 8601 formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="T:GrandCloud.CS.Model.UploadPartResponse">
            <summary>
            The UploadPartResponse contains all the information about the
            UploadPart method.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartResponse.PartNumber">
            <summary>
            Gets and sets the part number specified for the part upload.  This is needed when
            completing the multipart upload.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartResponse.ETag">
            <summary>
            Gets and sets the Entity tag returned when the part was uploaded.  This is needed 
            when completing the multipart upload.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartResponse.Headers">
            <summary>
            Gets and sets the Headers property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PutBucketPolicyRequest">
            <summary>
            The PutBucketPolicyRequest contains the parameters used for the SetBucketPolicy operation.
            <br />Required Parameters: BucketName, Policy
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketPolicyRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket the request will get the location for.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketPolicyRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketPolicyRequest.WithPolicy(System.String)">
            <summary>
            Sets the Policy property for this request.
            This is the JSON string representing the policy that will be applied to the CS Bucket.
            </summary>
            <param name="policy">The JSON string for the policy</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketPolicyRequest.IsSetPolicy">
            <summary>
            Checks if policy property is set.
            </summary>
            <returns>true if Policy property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.PutBucketPolicyRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutBucketPolicyRequest.Policy">
            <summary>
            Gets and sets the Policy property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PartStreamWrapper">
            <summary>
            This class is used to wrap a stream for a particular segment of a stream.  It 
            makes that segment look like you are reading from beginning to end of the stream.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.ListMultipartUploadsResponse">
            <summary>
            The ListMultipartUploadsResponse contains all the information about the
            ListMultipartUploads method.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.KeyMarker">
            <summary>
            Gets and sets the KeyMarker which is the key at or after which the listing began.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.UploadIdMarker">
            <summary>
            Gets and sets the UploadIdMarker property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.NextKeyMarker">
            <summary>
            Gets and sets the NextKeyMarker property.
            <para>
            When a list is truncated, specifies the last multipart upload that should
            be skipped over to resume listing. Use this value for the KeyMarker
            request parameter in a subsequent request.        
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.NextUploadIdMarker">
            <summary>
            Gets and sets the NextUploadIdMarker property.
            <para>
            When a list is truncated, specifies the last multipart upload that should
            be skipped over to resume listing. Use this value for the
            UploadIdMarker request parameter in a subsequent request.
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.MaxUploads">
            <summary>
            Gets and sets the MaxUploads property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.IsTruncated">
            <summary>
            Gets and sets the IsTruncated property.
            <para>
            Indicates whether the returned list of multipart uploads is truncated. A
            value true indicates the list was truncated. The list may be truncated if
            the number of multipart uploads exceeds the limit specified by
            MaxUploads.
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.MultipartUploads">
            <summary>
            Gets and sets the MultipartUploads property.
            <para>
            Container for elements related to a particular multipart upload. A response
            can contain zero or more Upload elements.
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.Prefix">
            <summary>
            Gets and sets the Prefix property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter. In effect, 
            CommonPrefixes lists keys that act like subdirectories in the directory specified 
            by Prefix. For example, if prefix is notes/ and delimiter is a slash (/), in 
            notes/summer/july, the common prefix is notes/summer/.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.CSClientFactory">
            <summary>
            The GrandCloud Web Services SDK provides devlopers with a coherent and unified interface to the
            suite of GrandCloud Web Services. The intent is to facilitate the rapid building of
            applications that leverage multiple GrandCloud Web Services.
            <para>
            To get started, request an instance of the CSClientFactory via this class's static Instance
            member. Use the factory instance to create clients for all the Web Services needed by
            the application.</para>
            </summary>
        </member>
        <member name="M:GrandCloud.CS.CSClientFactory.CreateGrandCloudCSClient">
            <summary>
            Create a client for the GrandCloud CS Service with the credentials defined in the App.config.
            
            Example App.config with credentials set. 
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="CSAccessKey" value="********************"/&gt;
                    &lt;add key="CSSecretKey" value="****************************************"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            </summary>
            <returns>An GrandCloud CS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.CSClientFactory.CreateGrandCloudCSClient(GrandCloud.CS.GrandCloudCSConfig)">
            <summary>
            Create a client for the GrandCloud CS Service with the credentials defined in the App.config.
            
            Example App.config with credentials set. 
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSAccessKey" value="********************"/&gt;
                    &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            </summary>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An GrandCloud CS client</returns>
        </member>
        <member name="M:GrandCloud.CS.CSClientFactory.CreateGrandCloudCSClient(System.String,System.String)">
            <summary>
            Create a client for the GrandCloud CS service with the default configuration
            </summary>
            <param name="accessKey">The Access Key associated with the account</param>
            <param name="secretAccessKey">The Secret Access Key associated with the account</param>
            <returns>An GrandCloud CS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.CSClientFactory.CreateGrandCloudCSClient(System.String,System.String,GrandCloud.CS.GrandCloudCSConfig)">
            <summary>
            Create a client for the GrandCloud CS service with the specified configuration
            </summary>
            <param name="accessKey">The Access Key associated with the account</param>
            <param name="secretAccessKey">The Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An GrandCloud CS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="T:GrandCloud.CS.Model.ListObjectsRequest">
            <summary>
            The ListObjectsRequest contains the parameters used for the ListObjects operation.
            <br />Required Parameters: BucketName
            <br />Optional Parameters: Prefix, Marker, MaxKeys, Delimiter
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the name of the CS Bucket to list keys from.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set
            </summary>
            <returns>true if BucketName property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.WithPrefix(System.String)">
            <summary>
            Sets the Prefix property for this request.
            All keys matched will have this prefix.
            </summary>
            <param name="prefix">The value that Prefix is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.IsSetPrefix">
            <summary>
            Checks if Prefix property is set
            </summary>
            <returns>true if Prefix property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.WithMarker(System.String)">
            <summary>
            Sets the Marker property for this request.
            All keys returned will be lexiographically after the marker.
            </summary>
            <param name="marker">the value that Marker is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.IsSetMarker">
            <summary>
            Checks if Marker property is set
            </summary>
            <returns>true if Marker property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.WithMaxKeys(System.Int32)">
            <summary>
            Sets the MaxKeys property for this request.
            Limits the result set of keys to MaxKeys.
            </summary>
            <param name="maxKeys">the value that MaxKeys is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.IsSetMaxKeys">
            <summary>
            Checks if MaxKeys property is set
            </summary>
            <returns>true if MaxKeys property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.WithDelimiter(System.String)">
            <summary>
            Sets the Delimiter property for this request.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection. 
            These rolled-up keys are not returned elsewhere in the response.
            </summary>
            <param name="delimiter">the value that Delimiter is set to.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListObjectsRequest.IsSetDelimiter">
            <summary>
            Checks if Delimiter property is set
            </summary>
            <returns>true if Delimiter property is set</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            This is the name of the CS Bucket to list keys from.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsRequest.Prefix">
            <summary>
            Gets and sets the Prefix property.
            All keys matched will have this prefix.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsRequest.Marker">
            <summary>
            Gets and sets the Marker property.
            All keys returned will be lexiographically after the marker.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsRequest.MaxKeys">
            <summary>
            Gets and sets the MaxKeys property.
            Limits the result set of keys to MaxKeys.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsRequest.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection.
            </summary>
            <remarks>
            These rolled-up keys are not returned elsewhere in the response.
            </remarks>
        </member>
        <member name="T:GrandCloud.CS.Model.GetPreSignedUrlRequest">
            <summary>
            The GetPreSignedUrlRequest contains the parameters used to create
            a pre signed URL.
            <br />Required Parameters: BucketName, Expires
            <br />Optional Parameters: Key, Verb: default is GET
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket that contains the CS Object
            you want to create a pre signed URL for.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object you want to create a 
            pre signed URL for.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.WithContentType(System.String)">
            <summary>
            Sets the ContentType property for this request.
            This property defaults to "binary/octet-stream",
            but if you require something else you can set this property.
            </summary>
            <param name="contentType">the value the ContentType to be set to</param>
            <returns>The request with the ContentType set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.IsSetContentType">
            <summary>
            Checks if ContentType property is set.
            </summary>
            <returns>true if ContentType property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.WithExpires(System.DateTime)">
            <summary>
            Sets the Expires property for this request.
            The time when the signature expires, specified as a DateTime 
            Object. 
            </summary>
            <param name="expires">The value that Expires is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.IsSetExpires">
            <summary>
            Checks if Expires property is set.
            </summary>
            <returns>true if Expires property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.WithProtocol(GrandCloud.CS.Model.Protocol)">
            <summary>
            Sets the Protocol property for this request.
            Specifies whether the pre signed URL will use 
            http or https. Defaults to https unless otherwise 
            set.
            </summary>
            <param name="protocol">The value that Protocol is set to</param>
            <returns>the response with the Protocol set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.WithVerb(GrandCloud.CS.Model.HttpVerb)">
            <summary>
            Sets the Verb property for this request.
            Specifies which verb to use in the pre-signed URL.
            Accepted verbs are GET, PUT and HEAD.
            Default value is GET.
            </summary>
            <param name="verb">The value that Verb is set to</param>
            <returns>the response with the Verb set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetPreSignedUrlRequest.WithResponseHeaderOverrides(GrandCloud.CS.Model.ResponseHeaderOverrides)">
            <summary>
            Sets the ResponseHeaderOverrides property and returns back this instance for method chaining.
            </summary>
            <param name="responseHeaderOverrides">The response headers</param>
            <returns>this instance</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.GetPreSignedUrlRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetPreSignedUrlRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetPreSignedUrlRequest.ContentType">
            <summary>
            Gets and sets the ContentType property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetPreSignedUrlRequest.Expires">
            <summary>
            Gets and sets the Expires property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetPreSignedUrlRequest.Protocol">
            <summary>
            Gets and sets the Protocol property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetPreSignedUrlRequest.Verb">
            <summary>
            Gets and sets the Verb property.
            Specifies the verb used in the pre-signed URL.
            Accepted verbs are GET, PUT and HEAD.
            Default is GET.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetPreSignedUrlRequest.ResponseHeaderOverrides">
            <summary>
            Gets and sets the response headers to be returned back with the response of the object.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CompleteMultipartUploadResponse">
            <summary>
            The CompleteMultipartUploadResponse contains all the information about the
            CompleteMultipartUpload method.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadResponse.Location">
            <summary>
            Gets and sets the URI that identifies the newly created object.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadResponse.BucketName">
            <summary>
            Gets and sets the name of the bucket that contains the newly created object.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadResponse.Key">
            <summary>
            Gets and sets the object key of the newly created object.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadResponse.ETag">
            <summary>
            Gets and sets Entity tag that identifies the newly created object's data. Objects with different
            object data will have different entity tags. The entity tag is an opaque string.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadResponse.Headers">
            <summary>
            Gets and sets the Headers property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.Tuple`2">
            <summary>
            Creates a Key Value pair relating the key and value of type
            T and U respectively
            </summary>
            <typeparam name="T">The type of the key</typeparam>
            <typeparam name="U">The type of the value</typeparam>
        </member>
        <member name="M:GrandCloud.CS.Model.Tuple`2.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.Tuple`2.#ctor(`0,`1)">
            <summary>
            Constructs a Tuple relating an instance
            of type T to an instance of type U
            </summary>
            <param name="first">The key</param>
            <param name="second">The value</param>
        </member>
        <member name="M:GrandCloud.CS.Model.Tuple`2.GetHashCode">
            <summary>
            Returns the hash code for this tuple
            </summary>
            <returns>A 32-bit signed integer hash code</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.Tuple`2.Equals(System.Object)">
            <summary>
            Determines whether two Tuple objects have the same value.
            </summary>
            <param name="obj"></param>
            <returns>true if obj is a String  and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.Tuple`2.Equals(GrandCloud.CS.Model.Tuple{`0,`1})">
            <summary>
            Determines whether two Tuple objects have the same value.
            </summary>
            <param name="other"></param>
            <returns>true if obj is a String  and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.Tuple`2.First">
            <summary>
             Returns the key of this Tuple
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.Tuple`2.Second">
            <summary>
            Returns the value of this Tuple
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.GetObjectResponse">
            <summary>
            The GetObjectResponse contains any header or metadata returned by CS. 
            GetObjectResponse's contain resources that need to be disposed. The
            recommended way for handling GetObjectResponse objects is wrapping them
            in using clauses, like so:
            <code>
            using (GetObjectResponse response = csClient.GetObject(request))
            {
                ...
            }
            </code>
            This will ensure that any network resources, file streams and web headers
            have been returned back to the system for future use.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectResponse.WriteResponseStreamToFile(System.String)">
            <summary>
            Writes the content of the ResponseStream a file indicated by the filePath argument.
            </summary>
            <param name="filePath">The location where to write the ResponseStream</param>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectResponse.WriteResponseStreamToFile(System.String,System.Boolean)">
            <summary>
            Writes the content of the ResponseStream a file indicated by the filePath argument.
            </summary>
            <param name="filePath">The location where to write the ResponseStream</param>
            <param name="append">Whether or not to append to the file if it exists</param>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectResponse.WithSubscriber(System.EventHandler{GrandCloud.CS.Model.WriteObjectProgressArgs})">
            <summary>
            The "handler" will be notified every time a put
            object progress event is raised.
            </summary>
            <param name="handler">A method that consumes the put object progress notification</param>
            <returns>this instance of the PutObjectRequest</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectResponse.OnRaiseProgressEvent(System.Int64,System.Int64,System.Int64)">
            <summary>
            This method is called by a producer of write object progress
            notifications. When called, all the subscribers in the 
            invocation list will be called sequentially.
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectResponse.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectResponse.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectResponse.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectResponse.ContentType">
            <summary>
            Gets and sets the ContentType property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectResponse.ContentLength">
            <summary>
            Gets and sets the ContentLength property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectResponse.Headers">
            <summary>
            Gets and sets the Headers property.
            </summary>
        </member>
        <member name="E:GrandCloud.CS.Model.GetObjectResponse.WriteObjectProgressEvent">
            <summary>
            The event for Write Object progress notifications. All
            subscribers will be notified when a new progress
            event is raised.
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            put object progress notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, WriteObjectProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the Put Object Progress Event delegate's invocation list
            <code>
            GetObjectResponse response = csClient.GetObject(request);
            response.WriteObjectProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="T:GrandCloud.CS.Model.WriteObjectProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            download progress for the Write Object Event.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.TransferProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:GrandCloud.CS.Model.TransferProgressArgs.ToString">
            <summary>
            Returns a string representation of this object
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrandCloud.CS.Model.TransferProgressArgs.PercentDone">
            <summary>
            Gets the percentage of transfer completed
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.TransferProgressArgs.IncrementTransferred">
            <summary>
            Gets the number of bytes transferred since last event
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.TransferProgressArgs.TransferredBytes">
            <summary>
            Gets the number of bytes transferred
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.TransferProgressArgs.TotalBytes">
            <summary>
            Gets the total number of bytes to be transferred
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.WriteObjectProgressArgs.#ctor(System.String,System.String,System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="bucketName">The bucket name for the CS object being written.</param>
            <param name="key">The object key for the CS object being written.</param>
            <param name="versionId">The version-id of the CS object.</param>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="P:GrandCloud.CS.Model.WriteObjectProgressArgs.BucketName">
            <summary>
            Gets the bucket name for the CS object being written.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.WriteObjectProgressArgs.Key">
            <summary>
            Gets the object key for the CS object being written.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.WriteObjectProgressArgs.VersionId">
            <summary>
            Gets the version-id of the CS object.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.DeleteBucketPolicyResponse">
            <summary>
            The DeleteBucketPolicyResponse contains any headers returned by CS.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.ImmutableCredentials">
            <summary>
            Immutable representation of GrandCloud credentials.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.ImmutableCredentials.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructs an ImmutableCredentials object with supplied accessKey, secretKey,
            optional token and flag to determine if secretKey should be stored in a SecureString
            </summary>
            <param name="csAccessKeyId"></param>
            <param name="csSecretAccessKey"></param>
            <param name="token">Optional. Can be set to null or empty for non-session credentials.</param>
            <param name="useSecureStringForSecretKey">
            True if secretKey should be stored in SecureString. False if secretKey should be stored as clear string.
            </param>
        </member>
        <member name="M:GrandCloud.CS.ImmutableCredentials.#ctor(System.String,System.Security.SecureString,System.String)">
            <summary>
            Constructs an ImmutableCredentials object with supplied accessKey, secretKey as a SecureString
            and an optional session token.
            </summary>
            <param name="accessKey"></param>
            <param name="secretKey"></param>
            <param name="token">Optional. Can be set to null or empty for non-session credentials.</param>
        </member>
        <member name="M:GrandCloud.CS.ImmutableCredentials.Copy">
            <summary>
            Returns a copy of the current credentials.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrandCloud.CS.ImmutableCredentials.AccessKey">
            <summary>
            Gets the AccessKey property for the current credentials.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.ImmutableCredentials.ClearSecretKey">
            <summary>
            Gets the ClearSecretKey property for the current credentials.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.ImmutableCredentials.SecureSecretKey">
            <summary>
            Gets the SecureSecretKey property for the current credentials.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.ImmutableCredentials.UseSecureStringForSecretKey">
            <summary>
            Gets the UseSecureStringForSecretKey property for the current credentials.
            Specifies if secretKey is stored as SecureString or String.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.CSCredentials">
            <summary>
            Abstract class that represents a credentials object for AWS services.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.CSCredentials.GetCredentials">
            <summary>
            Returns a copy of ImmutableCredentials
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrandCloud.CS.BasicCSCredentials">
            <summary>
            Basic set of credentials consisting of an AccessKey and SecretKey
            </summary>
        </member>
        <member name="M:GrandCloud.CS.BasicCSCredentials.#ctor(System.String,System.String)">
            <summary>
            Constructs a BasicCSCredentials object for the specified accessKey and secretKey
            SecretKey is stored as a clear string
            </summary>
            <param name="accessKey"></param>
            <param name="secretKey"></param>
        </member>
        <member name="M:GrandCloud.CS.BasicCSCredentials.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs a BasicCSCredentials object for the specified accessKey and secretKey,
            with the useSecureString flag to signal if the secretKey should be stored as SecureString
            </summary>
            <param name="accessKey"></param>
            <param name="secretKey"></param>
            <param name="useSecureString">
            True if secretKey should be stored in SecureString. False if secretKey should be stored as clear string.
            </param>
        </member>
        <member name="M:GrandCloud.CS.BasicCSCredentials.#ctor(System.String,System.Security.SecureString)">
            <summary>
            Constructs a BasicCSCredentials object for the specified accessKey and secretKey
            SecretKey is stored in SecureString
            </summary>
            <param name="accessKey"></param>
            <param name="secretKey"></param>
        </member>
        <member name="M:GrandCloud.CS.BasicCSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrandCloud.CS.EnvironmentCSCredentials">
            <summary>
            Credentials that are retrieved from ConfigurationManager.AppSettings
            </summary>
        </member>
        <member name="M:GrandCloud.CS.EnvironmentCSCredentials.#ctor">
            <summary>
            Constructs an instance of EnvironmentCSCredentials and attempts
            to load AccessKey and SecretKey from ConfigurationManager.AppSettings
            </summary>
        </member>
        <member name="M:GrandCloud.CS.EnvironmentCSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrandCloud.CS.Model.ListPartsRequest">
            <summary>
            The ListPartsRequest contains the parameters used for the ListParts method.
            <br />Required Parameters: BucketName, Key, UploadId
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.WithUploadId(System.String)">
            <summary>
            Sets the UploadId property for this request.
            This is the upload id for the multipart upload in process.
            </summary>
            <param name="uploadId">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.IsSetUploadId">
            <summary>
            Checks if UploadId property is set.
            </summary>
            <returns>true if UploadId property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.WithMaxParts(System.Int32)">
            <summary>
            Sets the MaxParts property for this request.
            </summary>
            <param name="maxParts">The value that MaxParts is set to</param>
            <returns>the request with the MaxParts set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.IsSetMaxParts">
            <summary>
            Checks if MaxParts property is set.
            </summary>
            <returns>true if MaxParts property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.WithPartNumberMarker(System.String)">
            <summary>
            Sets the Key property for this request.
            </summary>
            <param name="partNumberMarker">The value that PartNumberMarker is set to</param>
            <returns>the request with the PartNumberMarker set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListPartsRequest.IsSetPartNumberMarker">
            <summary>
            Checks if PartNumberMarker property is set.
            </summary>
            <returns>true if PartNumberMarker property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsRequest.UploadId">
            <summary>
            Gets and sets the UploadId property.
            This is the upload id for the multipart upload in process.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsRequest.MaxParts">
            <summary>
            Gets and sets the MaxParts property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsRequest.PartNumberMarker">
            <summary>
            Gets and sets the PartNumberMarker property.
            <para>
            Specifies the part after which listing should begin. Only parts with higher
            part numbers will be listed.
            </para>
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.ListPartsResponse">
            <summary>
            The ListPartsResponse contains all the information about the
            ListParts method.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.BucketName">
            <summary>
            Gets and sets the name of the bucket to which the multipart upload was initiated.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.Key">
            <summary>
            Gets and sets the object key for which the multipart upload was initiated.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.UploadId">
            <summary>
            Gets and sets the upload ID identifying the multipart upload whose parts are being listed.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.StorageClass">
            <summary>
            Gets and sets the class of storage used to store the uploaded object.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.PartNumberMarker">
            <summary>
            Gets and sets the part number after which listing begins.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.NextPartNumberMarker">
            <summary>
            Gets and sets the NextPartNumberMarker property.
            <para>
            When a list is truncated, specifies the last part that should be skipped
            over to resume listing. Use this value for the PartNumberMarker
            request property in a subsequent request.
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.MaxParts">
            <summary>
            Gets and sets the maximum number of parts allowed in a response.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.IsTruncated">
            <summary>
            Gets and sets the IsTruncated property.
            <para>
            Indicates whether the returned list of parts is truncated. A value true
            indicates the list was truncated. A list may be truncated if the number of
            parts exceeds the limit specified by MaxParts.
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListPartsResponse.Parts">
            <summary>
            Gets and sets the Parts property.
            <para>
            PartDetails is a container for elements related to a particular part. A response can contain
            zero or more Part elements.
            </para>
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.ListBucketsRequest">
            <summary>
            The ListBucketsRequest contains the parameters used for the ListAllBuckets operation.
            No parameters are needed for this request.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.GetObjectRequest">
            <summary>
            The GetObjectRequest contains the parameters used for the GetObject operation.
            <br />Required Parameters: BucketName, Key
            <br />Optional Parameters: ModifiedSinceDate, UnmodifiedSinceDate, 
            ETagToMatch, ETagToNotMatch, ByteRange
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket that contains the CS Object you
            want to get.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object you want to Get.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithModifiedSinceDate(System.DateTime)">
            <summary>
            Sets the ModifiedSinceDate property for this request.
            When this is set the CS object is returned only if it
            has been modified since the specified time, otherwise
            returns a 304 (not modified).
            </summary>
            <param name="modifiedSinceDate">The value that ModifiedSinceDate is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithUnmodifiedSinceDate(System.DateTime)">
            <summary>
            Sets the UnmodifiedSinceDate property for this request.
            When this is set the CS object is returned only if it
            has not been modified since the specified time, otherwise
            return a 412 (precondition failed).
            </summary>
            <param name="unmodifiedSinceDate">The value that UnmodifiedSinceDate is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithETagToMatch(System.String)">
            <summary>
            Sets the ETagToMatch property for this request.
            When this is set the CS object is returned only if
            its entity tag (ETag) is the same as the one specified,
            otherwise return a 412 (precondition failed).
            </summary>
            <param name="etagToMatch">The value that ETagToMatch is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.IsSetETagToMatch">
            <summary>
            Checks if ETagToMatch property is set.
            </summary>
            <returns>true if ETagToMatch property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithETagToNotMatch(System.String)">
            <summary>
            Sets the ETagToNotMatch property for this request.
            When this is set the CS object is returned only if
            its entity tag (ETag) is different from the one
            specified, otherwise return a 304 (not modified).
            </summary>
            <param name="etagToNotMatch">The value that ETagToNotMatch is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.IsSetETagToNotMatch">
            <summary>
            Checks if ETagToNotMatch property is set.
            </summary>
            <returns>true if ETagToNotMatch property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithByteRangeLong(System.Int64,System.Int64)">
            <summary>
            Sets the ByteRangeLong property with the start and end index
            specified.
            When this is set the request downloads the specified range of an object.
            </summary>
            <param name="startIndex">Specifies the index to start at</param>
            <param name="endIndex">Specifies the index to end at</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithByteRange(System.Int32,System.Int32)">
            <summary>
            Sets the ByteRange property with the start and end index
            specified.
            When this is set the request downloads the specified range of an object.
            </summary>
            <param name="startIndex">Specifies the index to start at</param>
            <param name="endIndex">Specifies the index to end at</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.IsSetByteRange">
            <summary>
            Checks if ByteRange property is set.
            </summary>
            <returns>true if ByteRange property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithTimeout(System.Int32)">
            <summary>
            Sets the Timeout property (in milliseconds). 
            The value of this property is assigned to the
            Timeout property of the HttpWebRequest
            Please specify a timeout value only if you are certain that
            the file will not be retrieved within the default intervals
            specified for an HttpWebRequest.
            </summary>
            <param name="timeout">Timeout property</param>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <returns>this instance</returns>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithReadWriteTimeout(System.Int32)">
            <summary>
            Sets the ReadWriteTimeout property (in milliseconds). 
            The value of this property is assigned to the
            ReadWriteTimeout property of the HttpWebRequest.
            </summary>
            <param name="readWriteTimeout">ReadWriteTimeout property</param>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <returns>this instance</returns>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectRequest.WithResponseHeaderOverrides(GrandCloud.CS.Model.ResponseHeaderOverrides)">
            <summary>
            Sets the ResponseHeaderOverrides property and returns back this instance for method chaining.
            </summary>
            <param name="responseHeaderOverrides">The response headers</param>
            <returns>this instance</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.ModifiedSinceDate">
            <summary>
            Gets and sets the ModifiedSinceDate property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.UnmodifiedSinceDate">
            <summary>
            Gets and sets the UnmodifiedSinceDate property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.ETagToMatch">
            <summary>
            Gets and sets the ETagToMatch property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.ETagToNotMatch">
            <summary>
            Gets and sets the ETagToNotMatch property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.ByteRangeLong">
            <summary>
            Gets and sets the ByteRangeLong property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.ByteRange">
            <summary>
            Gets the ByteRange property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.Timeout">
            <summary>
            Gets and sets of the Timeout property (in milliseconds).
            The value of this property is assigned to the
            Timeout property of the HTTPWebRequest object used
            for CS GET Object requests.
            </summary>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.ReadWriteTimeout">
            <summary>
            Gets and sets of the ReadWriteTimeout property (in milliseconds).
            The value of this property is assigned to the
            ReadWriteTimeout property of the HTTPWebRequest object
            used for CS GET Object requests.
            </summary>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectRequest.ResponseHeaderOverrides">
            <summary>
            Gets and sets the response headers to be returned back with the response of the object.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.GetBucketLocationRequest">
            <summary>
            The GetBucketLocationRequest contains the parameters used for the GetBucketLocation operation.
            <br />Required Parameters: BucketName
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.GetBucketLocationRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket the request will get the location for.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetBucketLocationRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.GetBucketLocationRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.DeleteObjectRequest">
            <summary>
            The DeleteObjectRequest contains the parameters used for the DeleteObject operation.
            <br />Required Parameters: BucketName, Key
            <br />The MfaCodes property is required if the bucket containing this object has been
            configured with the EnableMfaDelete property. For more information, please see:
            <see cref="P:GrandCloud.CS.Model.CSBucketVersioningConfig.EnableMfaDelete"/>.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteObjectRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket that contains the CS Object
            you want to delete.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteObjectRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteObjectRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object you want to delete.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteObjectRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.DeleteObjectRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.DeleteObjectRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CompleteMultipartUploadRequest">
            <summary>
            The CompleteMultipartUploadRequest contains the parameters used for the CompleteMultipartUpload method.
            <br />Required Parameters: BucketName, Key, UploadId, PartETags
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket where the CS Object you are
            creating gets put.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object you create.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.WithUploadId(System.String)">
            <summary>
            Sets the UploadId property for this request.
            This is the upload id for the multipart upload in process.
            </summary>
            <param name="uploadId">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.IsSetUploadId">
            <summary>
            Checks if UploadId property is set.
            </summary>
            <returns>true if UploadId property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.WithPartETags(GrandCloud.CS.Model.PartETag[])">
            <summary>
            Adds the elements from the array in the collection of PartETags for this request.
            </summary>
            <param name="partETags">PartETags that will added to this request.</param>
            <returns>the request with the PartETags set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.WithPartETags(System.Collections.Generic.IEnumerable{GrandCloud.CS.Model.PartETag})">
            <summary>
            Adds the elements from the array in the collection of PartETags for this request.
            </summary>
            <param name="partETags">PartETags that will added to this request.</param>
            <returns>The request with the PartETags set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.WithPartETags(GrandCloud.CS.Model.UploadPartResponse[])">
            <summary>
            Transforms the UploadPartResponses into PartETags and adds them to the request.
            </summary>
            <param name="responses">The list of response objects return from UploadParts.</param>
            <returns>The request with the PartETags set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CompleteMultipartUploadRequest.WithPartETags(System.Collections.Generic.IEnumerable{GrandCloud.CS.Model.UploadPartResponse})">
            <summary>
            Transforms the UploadPartResponses into PartETags and adds them to the request.
            </summary>
            <param name="responses">The list of response objects return from UploadParts.</param>
            <returns>The request with the PartETags set</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadRequest.UploadId">
            <summary>
            Gets and sets the UploadId property.
            This is the upload id for the multipart upload in process.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CompleteMultipartUploadRequest.PartETags">
            <summary>
            Gets and sets the PartETags property. This collection contains an entry for every part uploaded 
            with its part number and etag.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.GrandCloudServiceException">
            <summary>
            A base exception for some GrandCloud Web Services.
            <para>
            Most exceptions thrown to client code will be service-specific exceptions, though some services
            may throw this exception if there is a problem which is caught in the core client code.
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudServiceException.ErrorType">
            <summary>
            Whether the error was attributable to <c>Sender</c> or <c>Reciever</c>.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudServiceException.ErrorCode">
            <summary>
            The error code returned by the service
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudServiceException.RequestId">
            <summary>
            The id of the request which generated the exception.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudServiceException.StatusCode">
            <summary>
            The HTTP status code from the service response
            </summary>
        </member>
        <member name="T:GrandCloud.CS.GrandCloudCSConfig">
            <summary>
            Configuration for GrandCloud CS Client.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithServiceURL(System.String)">
            <summary>
            Sets the ServiceURL property
            </summary>
            <param name="serviceURL">ServiceURL property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.IsSetServiceURL">
            <summary>
            Checks if ServiceURL property is set
            </summary>
            <returns>true if ServiceURL property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithUserAgent(System.String)">
            <summary>
            Sets the UserAgent property
            </summary>
            <param name="userAgent">UserAgent property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.IsSetUserAgent">
            <summary>
            Checks if UserAgent property is set
            </summary>
            <returns>true if UserAgent property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithProxyHost(System.String)">
            <summary>
            Sets the ProxyHost property
            </summary>
            <param name="proxyHost">ProxyHost property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.IsSetProxyHost">
            <summary>
            Checks if ProxyHost property is set
            </summary>
            <returns>true if ProxyHost property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithProxyPort(System.Int32)">
            <summary>
            Sets the ProxyPort property
            </summary>
            <param name="proxyPort">ProxyPort property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.IsSetProxyPort">
            <summary>
            Checks if ProxyPort property is set
            </summary>
            <returns>true if ProxyPort property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithProxyUsername(System.String)">
            <summary>
            Sets the ProxyUsername property
            </summary>
            <param name="userName">Value for the ProxyUsername property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.IsSetProxyUsername">
            <summary>
            Checks if ProxyUsername property is set
            </summary>
            <returns>true if ProxyUsername property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithProxyPassword(System.String)">
            <summary>
            Sets the ProxyPassword property.
            Used in conjunction with the ProxyUsername
            property to authenticate requests with the
            specified Proxy server.
            </summary>
            <remarks>
            If this property isn't set, String.Empty is used as
            the proxy password. This property isn't
            used if ProxyUsername is null or empty.
            </remarks>
            <param name="password">ProxyPassword property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.IsSetProxyPassword">
            <summary>
            Checks if ProxyPassword property is set
            </summary>
            <returns>true if ProxyPassword property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithMaxErrorRetry(System.Int32)">
            <summary>
            Sets the MaxErrorRetry property
            </summary>
            <param name="maxErrorRetry">MaxErrorRetry property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.IsSetMaxErrorRetry">
            <summary>
            Checks if MaxErrorRetry property is set
            </summary>
            <returns>true if MaxErrorRetry property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithCommunicationProtocol(GrandCloud.CS.Model.Protocol)">
            <summary>
            Sets the Protocol property. Valid values are Protocol.HTTP 
            and Protocol.HTTPS. Default is Protocol.HTTPS.
            </summary>
            <param name="protocol">The protocol to use</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSConfig.WithUseSecureStringForGrandCloudSecretKey(System.Boolean)">
            <summary>
            Sets the UseSecureString property. 
            By default, the GrandCloud Secret Access Key is stored
            in a SecureString (true) - this is one of the secure
            ways to store a secret provided by the .NET Framework.
            But, the use of SecureStrings is not supported in Medium 
            Trust Windows Hosting environments. If you are building an
            ASP.NET application that needs to run with Medium Trust,
            set this property to false, and the client will
            not save your GrandCloud Secret Key in a secure string. Changing
            the default to false can result in the Secret Key being
            vulnerable; please use this property judiciously.
            </summary>
            <param name="fSecure">
            Whether a secure string should be used or not.
            </param>
            <returns>The Config object with the property set</returns>
            <remarks>Storing the AWS Secret Access Key is not
            recommended unless absolutely necessary.
            </remarks>
            <seealso cref="T:System.Security.SecureString"/>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.ServiceURL">
            <summary>
            Gets and sets the ServiceURL property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.UserAgent">
            <summary>
            Gets and sets the UserAgent property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.ProxyHost">
            <summary>
            Gets and sets the ProxyHost property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.ProxyPort">
            <summary>
            Gets and sets the ProxyPort property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.ProxyUsername">
            <summary>
            Gets and sets the ProxyUsername property.
            Used in conjunction with the ProxyPassword
            property to authenticate requests with the
            specified Proxy server.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.ProxyPassword">
            <summary>
            Gets and sets the ProxyPassword property.
            Used in conjunction with the ProxyUsername
            property to authenticate requests with the
            specified Proxy server.
            </summary>
            <remarks>
            If this property isn't set, String.Empty is used as
            the proxy password. This property isn't
            used if ProxyUsername is null or empty.
            </remarks>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.MaxErrorRetry">
            <summary>
            Gets and sets the MaxErrorRetry property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.CommunicationProtocol">
            <summary>
            Gets and Sets the property that determines whether
            the HTTP or HTTPS protocol is used to make requests to the
            CS service. By default Protocol.HTTPS is used to 
            communicate with CS.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.UseSecureStringForGrandCloudSecretKey">
            <summary>
            Gets and Sets the UseSecureString property. 
            By default, the GrandCloud Secret Access Key is stored
            in a SecureString (true) - this is one of the secure
            ways to store a secret provided by the .NET Framework.
            But, the use of SecureStrings is not supported in Medium 
            Trust Windows Hosting environments. If you are building an
            ASP.NET application that needs to run with Medium Trust,
            set this property to false, and the client will
            not save your GrandCloud Secret Key in a secure string. Changing
            the default to false can result in the Secret Key being
            vulnerable; please use this property judiciously.
            </summary>
            <remarks>Storing the GrandCloud Secret Access Key is not
            recommended unless absolutely necessary.
            </remarks>
            <seealso cref="T:System.Security.SecureString"/>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.BufferSize">
            <summary>
            Gets and Sets the BufferSize property.
            The BufferSize controls the buffer used to read in from input streams and write 
            out to the request.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSConfig.ConnectionLimit">
            <summary>
            Gets and sets the connection limit set on the ServicePoint for the WebRequest.
            Default value is 50 connections unless ServicePointManager.DefaultConnectionLimit is set in 
            which case ServicePointManager.DefaultConnectionLimit will be used as the default.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Util.Logger">
            <summary>
            This is a dynamic wrapper around log4net so we can avoid log4net being required
            to be distributed with the SDK.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Util.Logger.loadStatics">
            <summary>
            This should be a one time call to use reflection to find all the types and methods
            needed for the logging API.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Util.Logger.Error(System.String,System.Exception)">
            <summary>
            Simple wrapper around the log4net Error method.
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:GrandCloud.CS.Util.Logger.Debug(System.String,System.Exception)">
            <summary>
            Simple wrapper around the log4net Debug method.
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:GrandCloud.CS.Util.Logger.DebugFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net DebugFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:GrandCloud.CS.Util.Logger.InfoFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net InfoFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="P:GrandCloud.CS.Util.Logger.IsErrorEnabled">
            <summary>
            Simple wrapper around the log4net IsErrorEnabled property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Util.Logger.IsDebugEnabled">
            <summary>
            Simple wrapper around the log4net IsDebugEnabled property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Util.Logger.IsInfoEnabled">
            <summary>
            Simple wrapper around the log4net IsInfoEnabled property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PutObjectResponse">
            <summary>
            The PutObjectResponse contains any headers returned by CS.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectResponse.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectResponse.Headers">
            <summary>
            Gets and sets the Headers property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PutBucketRequest">
            <summary>
            The PutBucketRequest contains the parameters used for the CreateBucket operation.
            The BucketRegion parameter is used if you wish to specify the bucket locality.
            <br />Required Parameters: BucketName
            <br />Optional Parameters: BucketRegion, Default - CSRegion.HUADONG1
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket that will be created by this request.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketRequest.WithBucketRegion(GrandCloud.CS.Model.CSRegion)">
            <summary>
            Sets the BucketRegion property for this request.
            When set, this will determine where your data will
            reside in CS. Refer <see cref="T:GrandCloud.CS.Model.CSRegion"/>
            for a list of possible values.
            </summary>
            <param name="bucketRegion">The value that BucketRegion is set to</param>
            <returns>the request with the BucketRegion set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutBucketRequest.WithBucketRegionName(System.String)">
            <summary>
            Alternative to setting bucket region by using the region's name.
            When set, this will determine where your data will
            reside in CS.
            Valid values: huabei-1, huadong-1
            </summary>
            <param name="bucketRegionName">The value that BucketRegionName is set to</param>
            <returns>the request with the BucketRegionName set</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.PutBucketRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutBucketRequest.BucketRegion">
            <summary>
            Gets and sets the BucketRegion property.
            Refer <see cref="T:GrandCloud.CS.Model.CSRegion"/>
            for a list of possible values.
            Default: CSRegion.HUADONG1
            <see cref="T:GrandCloud.CS.Model.CSRegion" />
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutBucketRequest.BucketRegionName">
            <summary>
            Alternative to setting bucket region by using the region's name.
            When set, this will determine where your data will
            reside in CS.
            Valid values: huabei-1, huadong-1
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PartETag">
            <summary>
            A container object for holding the part number and etag used when completing a
            multipart upload.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.PartETag.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.PartETag.CompareTo(GrandCloud.CS.Model.PartETag)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PartETag.#ctor(System.Int32,System.String)">
            <summary>
            Constructs an instance of PartETag and sets the part number and etag.
            </summary>
            <param name="partNumber">The part number.</param>
            <param name="eTag">the associated ETag for the part number.</param>
        </member>
        <member name="M:GrandCloud.CS.Model.PartETag.WithPartNumber(System.Int32)">
            <summary>
            Sets the PartNumber property for this request.
            </summary>
            <param name="partNumber">The value that PartNumber is set to</param>
            <returns>the request with the PartNumber set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PartETag.WithETag(System.String)">
            <summary>
            Sets the ETag property for this request.
            </summary>
            <param name="eTag">The value that ETag is set to</param>
            <returns>the request with the ETag set</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.PartETag.PartNumber">
            <summary>
            Gets and sets the PartNumber property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PartETag.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Util.GrandCloudCSUtil">
            <summary>
            Provides utilities used by the GrandCloud CS client implementation.
            These utilities might be useful to consumers of the GrandCloud CS
            library.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.UrlEncode(System.String,System.Boolean)">
            <summary>
            URL encodes a string. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns></returns>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.MakeStreamSeekable(System.IO.Stream)">
            <summary>
            Converts a non-seekable stream into a System.IO.MemoryStream.
            A MemoryStream's position can be moved arbitrarily
            </summary>
            <param name="input">The stream to be converted</param>
            <returns>A seekable MemoryStream</returns>
            <remarks>MemoryStreams use byte arrays as their backing store.
            Please use this judicially as it is likely that a very large
            stream will cause system resources to be used up.
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.Sign(System.String,System.Security.SecureString,System.Security.Cryptography.KeyedHashAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature
            </summary>
            <param name="data">The data to be signed</param>
            <param name="key">The secret signing key</param>
            <param name="algorithm">The algorithm to sign the data with</param>
            <returns>A string representing the HMAC signature</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.GenerateChecksumForStream(System.IO.Stream,System.Boolean)">
            <summary>
            Generates an md5Digest for the file-stream specified
            </summary>
            <param name="input">The Stream for which the MD5 Digest needs
            to be computed.</param>
            <param name="fbase64Encode">Whether the hash should be base64 encoded
            </param>
            <returns>A string representation of the hash with or w/o base64 encoding
            </returns>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.GenerateChecksumForContent(System.String,System.Boolean)">
            <summary>
            Generates an MD5 Digest for the string-based content
            </summary>
            <param name="content">The content for which the MD5 Digest needs
            to be computed.
            </param>
            <param name="fBase64Encode">Whether the returned checksum should be
            base64 encoded.
            </param>
            <returns>A string representation of the hash with or w/o base64 encoding
            </returns>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.CreateHeaderEntry(System.String,System.String)">
            <summary>
            Builds and returns the name value collection
            that can be added to the HTTP headers for the request
            </summary>
            <param name="key">The key to be added to the headers (eg. Content-Body)</param>
            <param name="value">The value of the key being added</param>
            <returns>A NameValueCollection with just one key-value pair</returns>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.ValidateBucket(System.String)">
            <summary>
            CS buckets adhere to RFC 1035:
            <list type="number">
            <item>Less than 255 characters, with each label less than 63 characters.</item>
            <item>Label must start with a letter</item>
            <item>Label must end with a letter or digit</item>
            <item>Label can have a string of letter, digits and hyphens in the middle.</item>
            <item>Although names can be case-sensitive, no significance is attached to the case.</item>
            <item>RFC 1123: Allow label to start with letter or digit (e.g. 3ware.com works)</item>
            <item>RFC 2181: No restrictions apart from the length restrictions.</item>
            </list>
            CS will start with RFCs 1035 and 1123 and impose the following additional restrictions:
            <list type="number">
            <item>Length between 3 and 63 characters (to allow headroom for upper-level domains,
                as well as to avoid separate length restrictions for bucket-name and its labels</item>
            <item>Only lower-case to avoid user confusion.</item>
            <item>No dotted-decimal IPv4-like strings</item>
            </list>
            </summary>
            <param name="bucketName">The BucketName to validate</param>
            <returns>True if the BucketName can pass the validation</returns>        
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.DoesCSBucketExist(System.String,GrandCloud.CS.GrandCloudCS)">
            <summary>
            Determines whether an CS bucket exists or not.
            This is done by:
            Creating a PreSigned Url for the bucket (with an expiry date at the end of this decade)
            </summary>
            <param name="bucketName">The name of the bucket to check.</param>
            <param name="csClient">The GrandCloud CS Client to use for CS specific operations.</param>
            <returns></returns>
        </member>
        <member name="M:GrandCloud.CS.Util.GrandCloudCSUtil.MimeTypeFromExtension(System.String)">
            <summary>
            Determines MIME type from a file extension
            </summary>
            <param name="ext">The extension of the file</param>
            <returns>The MIME type for the extension, or text/plain</returns>
        </member>
        <member name="P:GrandCloud.CS.Util.GrandCloudCSUtil.FormattedCurrentTimestamp">
            <summary>
            Formats the current date as a GMT timestamp
            </summary>
            <returns>A GMT formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="T:GrandCloud.CS.Model.ResponseHeaderOverrides">
            <summary>
            This class contains the values of the response headers that will be set on the 
            response from a GetObject request.  These values override any headers that were set
            when the object was uploaded to CS.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.ResponseHeaderOverrides.WithContentType(System.String)">
            <summary>
            Sets the ContentType property and returns back this instance for method chaining.
            </summary>
            <param name="contentType">The content type for the returned object.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ResponseHeaderOverrides.WithContentLanguage(System.String)">
            <summary>
            Sets the ContentLanguage property and returns back this instance for method chaining.
            </summary>
            <param name="contentLanguage">The content language for the returned object.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ResponseHeaderOverrides.WithExpires(System.String)">
            <summary>
            Sets the Expires property and returns back this instance for method chaining.
            </summary>
            <param name="expires">The expires for the returned object.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ResponseHeaderOverrides.WithCacheControl(System.String)">
            <summary>
            Sets the CacheControl property and returns back this instance for method chaining.
            </summary>
            <param name="cacheControl">The cache control for the returned object.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ResponseHeaderOverrides.WithContentDisposition(System.String)">
            <summary>
            Sets the ContentDisposition property and returns back this instance for method chaining.
            </summary>
            <param name="contentDisposition">The content disposition for the returned object.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ResponseHeaderOverrides.WithContentEncoding(System.String)">
            <summary>
            Sets the ContentEncoding property and returns back this instance for method chaining.
            </summary>
            <param name="contentEncoding">The content encoding for the returned object.</param>
            <returns>this instance</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.ResponseHeaderOverrides.ContentType">
            <summary>
            Gets or sets the ContentType.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ResponseHeaderOverrides.ContentLanguage">
            <summary>
            Gets or sets the ContentLanguage.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ResponseHeaderOverrides.Expires">
            <summary>
            Gets or sets the Expires.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ResponseHeaderOverrides.CacheControl">
            <summary>
            Gets or sets the CacheControl.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ResponseHeaderOverrides.ContentDisposition">
            <summary>
            Gets or sets the ContentDisposition.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ResponseHeaderOverrides.ContentEncoding">
            <summary>
            Gets or sets the ContentEncoding.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.ListBucketsResponse">
            <summary>
            The ListBucketsResponse contains the ListBucketsResult and
            any headers or metadata returned by CS.
            </summary>    
        </member>
        <member name="P:GrandCloud.CS.Model.ListBucketsResponse.Bucket">
            <summary>
            Gets the Bucket property. This property has been deprecated -
            please use the Buckets property of ListBucketsResponse.
            <see cref="P:GrandCloud.CS.Model.ListBucketsResponse.Buckets"/>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListBucketsResponse.Buckets">
            <summary>
            Gets the Buckets property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.DeleteObjectResponse">
            <summary>
            The DeleteObjectResponse returned by CS.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CSError">
            <summary>
            Represents an error returned by the CS service. Exposes 
            an error code, a message, a host ID and a request ID for
            debugging purposes.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSError.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSError.Message">
            <summary>
            Gets and sets the Message property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSError.RequestId">
            <summary>
            Gets and sets the RequestId property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSError.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSError.Resource">
            <summary>
            Gets and sets the Resource property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CSBucket">
            <summary>
            Represents an CS Bucket. 
            Contains a Bucket Name which is the name of the CS Bucket. 
            And a Creation Date which is the date that the CS Bucket was created.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.CSBucket.IsSetBucketName">
            <summary>
            Checks if BucketName property is set
            </summary>
            <returns>true if BucketName property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSBucket.IsSetCreationDate">
            <summary>
            Checks if CreationDate property is set
            </summary>
            <returns>true if CreationDate property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSBucket.IsSetBucketRegionName">
            <summary>
            Checks if BucketRegionName property is set
            </summary>
            <returns>true if BucketRegionName property is set</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.CSBucket.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSBucket.CreationDate">
            <summary>
            Gets and sets the CreationDate property.
            The date conforms to the ISO8601 date format.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSBucket.BucketRegionName">
            <summary>
            Gets and sets the BucketRegionName property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.AbortMultipartUploadRequest">
            <summary>
            The AbortMultipartUploadRequest contains the parameters used for the AbortMultipartUpload method.
            <br />Required Parameters: BucketName, Key, UploadId
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.AbortMultipartUploadRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.AbortMultipartUploadRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.AbortMultipartUploadRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.AbortMultipartUploadRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.AbortMultipartUploadRequest.WithUploadId(System.String)">
            <summary>
            Sets the UploadId property for this request.
            This is the upload id for the multipart upload in process.
            </summary>
            <param name="uploadId">The value that UploadId is set to</param>
            <returns>the request with the UploadId set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.AbortMultipartUploadRequest.IsSetUploadId">
            <summary>
            Checks if UploadId property is set.
            </summary>
            <returns>true if UploadId property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.AbortMultipartUploadRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.AbortMultipartUploadRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.AbortMultipartUploadRequest.UploadId">
            <summary>
            Gets and sets the UploadId property.
            This is the upload id for the multipart upload in process.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.SigningAlgorithm">
            <summary>
            The valid hashing algorithm supported by the sdk for request signing.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.ErrorType">
            <summary>
            Which end of a request was responsible for a service error response.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.ErrorType.Sender">
            <summary>
            The sender was responsible for the error, i.e. the client
            request failed validation or was improperly formatted.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.ErrorType.Receiver">
            <summary>
            The error occured within the service.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.ErrorType.Unknown">
            <summary>
            An unrecognized error type was returned.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.MultipartUpload">
            <summary>
            Container for elements related to a particular multipart upload.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.MultipartUpload.Key">
            <summary>
            Gets and sets the Key of the object for which the multipart upload was initiated.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.MultipartUpload.UploadId">
            <summary>
            Gets and sets the Upload ID that identifies the multipart upload.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.MultipartUpload.StorageClass">
            <summary>
            Gets and sets the class of storage that will be used to store the object when multipart
            upload is complete.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.MultipartUpload.Initiated">
            <summary>
            Gets and sets the date and time at which the multipart upload was initiated.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.InitiateMultipartUploadResponse">
            <summary>
            The InitiateMultipartUploadResponse contains all the information about the
            InitiateMultipartUpload method.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadResponse.BucketName">
            <summary>
            Gets and sets the name of the bucket.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadResponse.Key">
            <summary>
            Gets and sets the object key for which the multipart upload was initiated.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadResponse.UploadId">
            <summary>
            Gets and sets the initiated multipart upload id.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadResponse.Headers">
            <summary>
            Gets and sets the Headers property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.InitiateMultipartUploadRequest">
            <summary>
            The InitiateMultipartUploadRequest contains the parameters used for the InitiateMultipartUpload method.
            <br />Required Parameters: BucketName, Key
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket where the CS Object you are
            creating gets put.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>The request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object you create.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.WithContentType(System.String)">
            <summary>
            Sets the ContentType property for this request.
            This property defaults to "binary/octet-stream",
            but if you require something else you can set this property.
            </summary>
            <param name="contentType">the value the ContentType to be set to</param>
            <returns>The request with the ContentType set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.IsSetContentType">
            <summary>
            Checks if ContentType property is set.
            </summary>
            <returns>true if ContentType property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.WithMetaData(System.String,System.String)">
            <summary>
            Adds a key/value pair to the Metadata property for this request.
            The CS Object that you create will have this metadata associated
            with it.
            </summary>
            <param name="key">The key to associate with the object</param>
            <param name="value">The value for the key</param>
            <returns>The response with Metadata set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.WithMetaData(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds a set of key-value pairs to the request
            </summary>
            <param name="metaInfo">The set of key-value pairs that will eventually be
            associated with the CS Object</param>
            <returns></returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.IsSetMetaData">
            <summary>
            Checks if Metadata property is set.
            </summary>
            <returns>true if Metadata property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.RemoveMetaData(System.String)">
            <summary>
            Removes a key from the Metadata list if it was
            added previously
            </summary>
            <param name="key">The key to remove</param>
        </member>
        <member name="M:GrandCloud.CS.Model.InitiateMultipartUploadRequest.WithStorageClass(GrandCloud.CS.Model.CSStorageClass)">
            <summary>
            Sets the StorageClass property for this request.
            Default: CSStorageClass.Standard. Set this property
            only if you want reduced redundancy for this object.
            Please refer to 
            <see cref="T:GrandCloud.CS.Model.CSStorageClass"/> for
            information on CS Storage Classes.
            </summary>
            <param name="sClass">The Storage Class to be set on the object</param>
            <returns>The request with the StorageClass set</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadRequest.ContentType">
            <summary>
            Gets and sets the ContentType property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.InitiateMultipartUploadRequest.StorageClass">
            <summary>
            Gets and sets the StorageClass property.
            Default: CSStorageClass.Standard. Set this property
            only if you want reduced redundancy for this object.
            Please refer to 
            <see cref="T:GrandCloud.CS.Model.CSStorageClass"/> for
            information on CS Storage Classes.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CSObject">
            <summary>
            Represents an CS Object. Contains all attributes that an CS Object has.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.CSObject.ToString">
            <summary>
            Returns a System.String that represents the CSObject.
            </summary>
            <returns>A System.String representation of the CSObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSObject.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSObject.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSObject.IsSetLastModified">
            <summary>
            Checks if LastModified property is set.
            </summary>
            <returns>true if LastModified property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSObject.IsSetETag">
            <summary>
            Checks if ETag property is set.
            </summary>
            <returns>true if ETag property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.CSObject.IsSetStorageClass">
            <summary>
            Checks if StorageClass property is set.
            </summary>
            <returns>true if StorageClass property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.CSObject.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSObject.BucketName">
            <summary>
            Gets and sets the BucketName property.
            This is the name of the CS Bucket in which the
            key is stored.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSObject.LastModified">
            <summary>
            Gets and sets the LastModified property.
            Date retrieved from CS is in ISO8601 format.
            GMT formatted date is passed back to the user.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSObject.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSObject.Size">
            <summary>
            Gets and sets the Size property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.CSObject.StorageClass">
            <summary>
            Gets and sets the StorageClass property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PutBucketResponse">
            <summary>
            The PutBucketResponse contains any headers returned by CS.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PartDetail">
            <summary>
            PartDetails is a container for elements related to a particular part. A response can contain
            zero or more Part elements.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PartDetail.PartNumber">
            <summary>
            Gets and sets the part number identifying the part.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PartDetail.LastModified">
            <summary>
            Gets and sets the date and time at which the part was uploaded.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PartDetail.ETag">
            <summary>
            Gets and sets the entity tag returned when the part was uploaded.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PartDetail.Size">
            <summary>
            Gets and sets the size of the uploaded part data.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.GrandCloudCS">
            <summary>
            Interface for GrandCloud CS Clients.
            For more information about GrandCloud CS, go to <see href="http://www.grandcloud.cn/product/ecs"/>
            </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.GetPreSignedURL(GrandCloud.CS.Model.GetPreSignedUrlRequest)">
            <summary>
            The GetPreSignedURL operations creates a signed http request.
            Query string authentication is useful for giving HTTP or browser
            access to resources that would normally require authentication.
            When using query string authentication, you create a query,
            specify an expiration time for the query, sign it with your
            signature, place the data in an HTTP request, and distribute
            the request to a user or embed the request in a web page.
            A PreSigned URL can be generated for GET, PUT and HEAD
            operations on your bucket, keys, and versions.
            </summary>
            <param name="request">The GetPreSignedUrlRequest that defines the
            parameters of the operation.</param>
            <returns>A string that is the signed http request.</returns>
            <exception cref="T:System.ArgumentException" />
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.ListAllBuckets">
            <summary>
            The ListAllBuckets operation returns a list of all of the buckets
            owned by the authenticated sender of the request.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListBucketsResponse with the response from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginListAllBuckets(System.AsyncCallback,System.Object)">
            <summary>
            The ListAllBuckets operation returns a list of all of the buckets
            owned by the authenticated sender of the request.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListBucketsResponse with the response from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginListAllBuckets(GrandCloud.CS.Model.ListBucketsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListAllBuckets operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.EnableBucketLogging"/>
            </summary>
            <param name="request">The ListBucketsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListAllBuckets.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndListAllBuckets(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListAllBuckets operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListAllBuckets.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListBucketsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.ListAllBuckets(GrandCloud.CS.Model.ListBucketsRequest)">
            <summary>
            The ListAllBuckets operation returns a list of all of the buckets
            owned by the authenticated sender of the request.
            </summary>
            <param name="request">The ListBucketsRequest that defines the parameters
            of this operation</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListBucketsResponse with the response from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginGetBucketLocation(GrandCloud.CS.Model.GetBucketLocationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLocation operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.EnableBucketLogging"/>
            </summary>
            <param name="request">The GetBucketLocationRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndGetBucketLocation.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndGetBucketLocation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the GetBucketLocation operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetBucketLocation.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetBucketLocationResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.GetBucketLocation(GrandCloud.CS.Model.GetBucketLocationRequest)">
            <summary>
            The GetBucketLocation operation takes in a bucket's name and lists the location
            of the bucket. This information can be used to determine the bucket's geographical
            location.
            To determine the location of a bucket, you must be the bucket owner.
            </summary>
            <param name="request">The GetBucketLocationRequest that defines the parameters of the operation.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetBucketLocationResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginGetBucketPolicy(GrandCloud.CS.Model.GetBucketPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetBucketPolicy operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.GetBucketPolicy"/>
            </summary>
            <param name="request">The GetBucketPolicyRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndGetBucketPolicy.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndGetBucketPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the GetBucketPolicy operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetBucketPolicy.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetBucketPolicyResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.GetBucketPolicy(GrandCloud.CS.Model.GetBucketPolicyRequest)">
            <summary>
            <para>
            Retrieves the policy for the specified bucket. Only the owner of the
            bucket can retrieve the policy. If no policy has been set for the bucket,
            then an error will be thrown.
            </para>
            <para>
            Bucket policies provide access control management at the bucket level for
            both the bucket resource and contained object resources. Only one policy
            can be specified per-bucket.
            </para>
            <para>
            For more information on forming bucket polices, 
            refer: <see href="http://docs.amazonwebservices.com/GrandCloudCS/latest/dev/"/>
            </para>
            </summary>
            <param name="request">The GetBucketPolicyRequest that defines the parameters of the operation.</param>
            <returns>Returns a GetBucketPolicyResponse from CS.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginSetBucketPolicy(GrandCloud.CS.Model.PutBucketPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetBucketPolicy operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.SetBucketPolicy"/>
            </summary>
            <param name="request">The PutBucketPolicyRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndSetBucketPolicy.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndSetBucketPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the SetBucketPolicy operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetBucketPolicy.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutBucketPolicyResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.SetBucketPolicy(GrandCloud.CS.Model.PutBucketPolicyRequest)">
            <summary>
            <para>
            Sets the policy associated with the specified bucket. Only the owner of
            the bucket can set a bucket policy. If a policy already exists for the
            specified bucket, the new policy will replace the existing policy.
            </para>
            <para>
            Bucket policies provide access control management at the bucket level for
            both the bucket resource and contained object resources. Only one policy
            may be specified per-bucket.
            </para>
            <para>
            For more information on forming bucket polices, 
            refer: <see href="http://docs.amazonwebservices.com/GrandCloudCS/latest/dev/"/>
            </para>
            </summary>
            <param name="request">The PutBucketPolicyRequest that defines the parameters of the operation.</param>
            <returns>Returns a PutBucketPolicyResponse from CS.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginDeleteBucketPolicy(GrandCloud.CS.Model.DeleteBucketPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketPolicy operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.DeleteBucketPolicy"/>
            </summary>
            <param name="request">The DeleteBucketPolicyRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteBucketPolicy.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndDeleteBucketPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the DeleteBucketPolicy operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteBucketPolicy.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteBucketPolicyResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.DeleteBucketPolicy(GrandCloud.CS.Model.DeleteBucketPolicyRequest)">
            <summary>
            <para>
            Deletes the policy associated with the specified bucket. Only the owner
            of the bucket can delete the bucket policy.
            </para>
            <para>
            If you delete a policy that does not exist, GrandCloud CS will return a
            success (not an error message).
            </para>
            <para>
            Bucket policies provide access control management at the bucket level for
            both the bucket resource and contained object resources. Only one policy
            may be specified per-bucket.
            </para>
            <para>
            For more information on forming bucket polices, 
            refer: <see href="http://docs.amazonwebservices.com/GrandCloudCS/latest/dev/"/>
            </para>
            </summary>
            <param name="request">The DeleteBucketPolicyRequest that defines the parameters of the operation.</param>
            <returns>Returns a DeleteBucketPolicyResponse from CS.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginListObjects(GrandCloud.CS.Model.ListObjectsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListObjects operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.ListObjects"/>
            </summary>
            <param name="request">The ListObjectsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListObjects.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndListObjects(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListObjects operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListObjects.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListObjectsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.ListObjects(GrandCloud.CS.Model.ListObjectsRequest)">
            <summary>
            The ListObjects operation lists the objects/keys in a bucket ordered
            lexicographically (from a-Z). The list can be filtered via the Marker
            property of the ListObjectsRequest.
            In order to List Objects, you must have READ access to the bucket.
            </summary>
            <param name="request">
            The ListObjectsRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListObjectsResponse from CS with a list of CSObjects,
            headers and request parameters used to filter the list.</returns>
            <remarks>
            Since buckets can contain a virtually unlimited number of objects, the complete
            results of a list query can be extremely large. To manage large result sets,
            GrandCloud CS uses pagination to split them into multiple responses. Callers should
            always check the <see cref="P:GrandCloud.CS.Model.ListObjectsResponse.IsTruncated" />
            to see if the returned listing
            is complete, or if callers need to make additional calls to get more results.
            The marker parameter allows callers to specify where to start the object listing.
            List performance is not substantially affected by the total number of keys in your
            bucket, nor by the presence or absence of any additional query parameters.
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginCreateBucket(GrandCloud.CS.Model.PutBucketRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateBucket operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.CreateBucket"/>
            </summary>
            <param name="request">The PutBucketRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndCreateBucket.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndCreateBucket(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the CreateBucket operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateBucket.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutBucketResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.CreateBucket(GrandCloud.CS.Model.PutBucketRequest)">
            <summary>
            The CreateBucket operation creates a new CS Bucket.
            Depending on your latency and legal requirements, you can specify a location
            constraint that will affect where your data physically resides.
            </summary>
            <param name="request">
            The PutBucketRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutBucketResponse from CS.</returns>
            <remarks>
            Every object stored in GrandCloud CS is contained in a bucket. Buckets
            partition the namespace of objects stored in GrandCloud CS at the top level.
            Within a bucket, you can use any names for your objects, but bucket names
            must be unique across all of GrandCloud CS.
            <para>
            Buckets are similar to Internet domain names. Just as GrandCloud is the only owner
            of the domain name GrandCloud.com, only one person or organization can own a bucket
            within GrandCloud CS. The similarities between buckets and domain names is not a
            coincidence - there is a direct mapping between GrandCloud CS buckets and subdomains
            of s3.amazonaws.com. Objects stored in GrandCloud CS are addressable using the REST API
            under the domain bucketname.s3.amazonaws.com. For example, the object homepage.html
            stored in the GrandCloud CS bucket mybucket can be addressed as
            http://mybucket.s3.amazonaws.com/homepage.html.</para>
            To conform with DNS requirements, the following constraints apply:
            <list type="bullet">
            <item>Bucket names should not contain underscores (_)</item>
            <item>Bucket names should be between 3 and 63 characters long</item>
            <item>Bucket names should not end with a dash</item>
            <item>Bucket names cannot contain two, adjacent periods</item>
            <item>Bucket names cannot contain dashes next to periods
              (e.g., "my-.bucket.com" and "my.-bucket" are invalid)</item>
            <item>Bucket names cannot contain uppercase characters</item>
            </list>
            There is no limit to the number of objects that can be stored in a bucket and no
            variation in performance when using many buckets or just a few. You can store all
            of your objects in a single bucket or organize them across several buckets.
            </remarks>
            <seealso cref="T:GrandCloud.CS.Model.CSRegion"/>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginDeleteBucket(GrandCloud.CS.Model.DeleteBucketRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucket operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.DeleteBucket"/>
            </summary>
            <param name="request">The DeleteBucketRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteBucket.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndDeleteBucket(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the DeleteBucket operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteBucket.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteBucketResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.DeleteBucket(GrandCloud.CS.Model.DeleteBucketRequest)">
            <summary>
            The DeleteBucket operation deletes the bucket named in the request.
            All objects in the bucket must be deleted before the bucket itself can be deleted.
            Only the owner of a bucket can delete it, regardless of the bucket's access control policy.
            </summary>
            <param name="request">
            The DeleteBucketRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteBucketResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginGetObject(GrandCloud.CS.Model.GetObjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.GetObject"/>
            </summary>
            <param name="request">The GetObjectRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndGetObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndGetObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the GetObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.GetObject(GrandCloud.CS.Model.GetObjectRequest)">
            <summary>
            The GetObject operation fetches the most recent version of an CS object
            from the specified CS bucket. You must have READ access to the object.
            If READ access is granted to an anonymous user, an object can be retrieved
            without an authorization header. Providing a version-id for the object will
            fetch the specific version from CS instead of the most recent one.
            </summary>
            <param name="request">
            The GetObjectRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectResponse from CS.</returns>
            <remarks>
            Please wrap the response you get from calling GetObject in a using clause.
            This ensures that all underlying IO resources allocated for the response
            are disposed once the response has been processed. This is one way to
            call GetObject:
            <code>
            using (GetObjectResponse response = csClient.GetObject(request))
            {
                ... Process the response:
                Get the Stream, get the content-length, write contents to disk, etc
            }
            </code>
            To see what resources are cleaned up at the end of the using block, please
            see <see cref="M:GrandCloud.CS.Model.CSResponse.Dispose"/>
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginHeadObject(GrandCloud.CS.Model.GetObjectMetadataRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the HeadObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.HeadObject"/>
            </summary>
            <param name="request">The GetObjectMetadataRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndHeadObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndHeadObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the HeadObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginHeadObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectMetadataResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.HeadObject(GrandCloud.CS.Model.GetObjectMetadataRequest)">
            <summary>
            The HeadObject operation is used to retrieve information about a specific object
            or object size, without actually fetching the object itself. This is useful if you're
            only interested in the object metadata, and don't want to waste bandwidth on the object data.
            The response is identical to the GetObject response, except that there is no response body.
            </summary>
            <param name="request">
            The GetObjectMetadataRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectMetadataResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginPutObject(GrandCloud.CS.Model.PutObjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PutObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.PutObject"/>
            </summary>
            <param name="request">The PutObjectRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndPutObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndPutObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the PutObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPutObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.PutObject(GrandCloud.CS.Model.PutObjectRequest)">
             <summary>
             The PutObject operation adds an object to an CS Bucket.
             The response indicates that the object has been successfully stored.
             GrandCloud CS never stores partial objects: if you receive a successful
             response, then you can be confident that the entire object was stored.
            
             To ensure data is not corrupted over the network, use the Content-MD5
             header. When you use the Content-MD5 header, GrandCloud CS checks the object
             against the provided MD5 value. If they do not match, GrandCloud CS returns an error.
             Additionally, you can calculate the MD5 while putting an object to
             GrandCloud CS and compare the returned Etag to the calculated MD5 value.
            
             If an object already exists in a bucket, the new object will overwrite
             it because GrandCloud CS stores the last write request. However, GrandCloud CS
             is a distributed system. If GrandCloud CS receives multiple write requests
             for the same object nearly simultaneously, all of the objects might be
             stored, even though only one wins in the end. GrandCloud CS does not provide
             object locking; if you need this, make sure to build it into your application
             layer.
            
             If you specify a location constraint when creating a bucket, all objects
             added to the bucket are stored in the bucket's location.
            
             You must have WRITE access to the bucket to add an object.
             </summary>
             <param name="request">
             The PutObjectRequest that defines the parameters of the operation.
             </param>
             <exception cref="T:System.ArgumentException"></exception>
             <exception cref="T:System.ArgumentNullException"></exception>
             <exception cref="T:System.Net.WebException"></exception>
             <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
             <exception cref="T:System.IO.FileNotFoundException"></exception>
             <returns>Returns a PutObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginDeleteObject(GrandCloud.CS.Model.DeleteObjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.DeleteObject"/>
            </summary>
            <param name="request">The DeleteObjectRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndDeleteObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the DeleteObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.DeleteObject(GrandCloud.CS.Model.DeleteObjectRequest)">
             <summary>
             The DeleteObject operation removes the specified object from GrandCloud CS.
             Once deleted, there is no method to restore or undelete an object.
            
             If you delete an object that does not exist, GrandCloud CS will return a
             success (not an error message).
             </summary>
             <param name="request">
             The DeleteObjectRequest that defines the parameters of the operation.
             </param>
             <exception cref="T:System.ArgumentNullException"></exception>
             <exception cref="T:System.Net.WebException"></exception>
             <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
             <returns>Returns a DeleteObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginInitiateMultipartUpload(GrandCloud.CS.Model.InitiateMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.InitiateMultipartUpload"/>
            </summary>
            <param name="request">The InitiateMultipartUploadRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndInitiateMultipartUpload.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndInitiateMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the InitiateMultipartUpload operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateMultipartUpload.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a InitiateMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.InitiateMultipartUpload(GrandCloud.CS.Model.InitiateMultipartUploadRequest)">
            <summary>
            This method initiates a multipart upload and returns an InitiateMultipartUploadResponse 
            which contains an upload ID. This upload ID associates all the
            parts in the specific upload. You specify this upload ID in each of 
            your subsequent Upload Part requests. You also include
            this upload ID in the final request to either complete, or abort
            the multipart upload request.
            </summary>
            <param name="request">
            The CopyObjectRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a InitiateMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginUploadPart(GrandCloud.CS.Model.UploadPartRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UploadPart operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.UploadPart"/>
            </summary>
            <param name="request">The UploadPartRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndUploadPart.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndUploadPart(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the UploadPart operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUploadPart.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a UploadPartResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.UploadPart(GrandCloud.CS.Model.UploadPartRequest)">
            <summary>
            This method uploads a part in a multipart upload.  You must initiate a 
            multipart upload before you can upload any part.
            <para>
            Your UploadPart request must include an upload ID and a part number. 
            The upload ID is the ID returned by GrandCloud CS in response to your 
            Initiate Multipart Upload request. Part number can be any number between 1 and
            10,000, inclusive. A part number uniquely identifies a part and also 
            defines its position within the object being uploaded. If you 
            upload a new part using the same part number as an existing
            part, that part is overwritten.
            </para>
            <para>
            To ensure data is not corrupted traversing the network, specify the 
            Content-MD5 header in the Upload Part request. GrandCloud CS checks 
            the part data against the provided MD5 value. If they do not match,
            GrandCloud CS returns an error.
            </para>
            <para>
            When you upload a part, the UploadPartResponse response contains an ETag property.
            You should record this ETag property value and the part 
            number. After uploading all parts, you must send a CompleteMultipartUpload
            request. At that time GrandCloud CS constructs a complete object by 
            concatenating all the parts you uploaded, in ascending order based on 
            the part numbers. The CompleteMultipartUpload request requires you to
            send all the part numbers and the corresponding ETag values.
            </para>
            </summary>
            <param name="request">
            The UploadPartRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a UploadPartResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginListParts(GrandCloud.CS.Model.ListPartsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.ListParts"/>
            </summary>
            <param name="request">The ListPartsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListParts.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndListParts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListParts operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListParts.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListPartsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.ListParts(GrandCloud.CS.Model.ListPartsRequest)">
            <summary>
            This method lists the parts that have been uploaded 
            for a particular multipart upload.
            <para>
            This method must include the upload ID, returned by 
            the InitiateMultipartUpload request. This request 
            returns a maximum of 1000 uploaded parts by default. You can
            restrict the number of parts returned by specifying the 
            MaxParts property on the ListPartsRequest. If your multipart
            upload consists of more parts than allowed in the 
            ListParts response, the response returns a IsTruncated
            field with value true, and a NextPartNumberMarker property. 
            In subsequent ListParts request you can include the 
            PartNumberMarker property and set its value to the
            NextPartNumberMarker property value from the previous response.
            </para>
            </summary>
            <param name="request">
            The ListPartsRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a ListPartsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginAbortMultipartUpload(GrandCloud.CS.Model.AbortMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.AbortMultipartUpload"/>
            </summary>
            <param name="request">The AbortMultipartUploadRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndAbortMultipartUpload.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndAbortMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the AbortMultipartUpload operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAbortMultipartUpload.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a AbortMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.AbortMultipartUpload(GrandCloud.CS.Model.AbortMultipartUploadRequest)">
            <summary>
            This method aborts a multipart upload. After a multipart upload is 
            aborted, no additional parts can be uploaded using that upload ID. 
            The storage consumed by any previously uploaded parts will be freed.
            However, if any part uploads are currently in progress, those part 
            uploads may or may not succeed. As a result, it may be necessary to 
            abort a given multipart upload multiple times in order to completely free
            all storage consumed by all parts.
            </summary>
            <param name="request">
            The AbortMultipartUploadRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a AbortMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginCompleteMultipartUpload(GrandCloud.CS.Model.CompleteMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.CompleteMultipartUpload"/>
            </summary>
            <param name="request">The CompleteMultipartUploadRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndCompleteMultipartUpload.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndCompleteMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the CompleteMultipartUpload operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCompleteMultipartUpload.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a CompleteMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.CompleteMultipartUpload(GrandCloud.CS.Model.CompleteMultipartUploadRequest)">
            <summary>
            This operation completes a multipart upload by assembling 
            previously uploaded parts.
            <para>
            You first upload all parts using the UploadPart method. 
            After successfully uploading all relevant parts of an upload, 
            you call this operation to complete the upload. Upon receiving
            this request, GrandCloud CS concatenates all the parts in ascending 
            order by part number to create a new object. In the 
            CompleteMultipartUpload request, you must provide the 
            parts list. For each part in the list, you provide the 
            part number and the ETag header value, returned after that 
            part was uploaded.
            </para>
            <para>
            Processing of a CompleteMultipartUpload request may take 
            several minutes to complete.
            </para>
            </summary>
            <param name="request">
            The CompleteMultipartUploadRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a CompleteMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.BeginListMultipartUploads(GrandCloud.CS.Model.ListMultipartUploadsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.ListMultipartUploads"/>
            </summary>
            <param name="request">The ListMultipartUploadsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListMultipartUploads.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.EndListMultipartUploads(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListMultipartUploads operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListMultipartUploads.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListMultipartUploadsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCS.ListMultipartUploads(GrandCloud.CS.Model.ListMultipartUploadsRequest)">
            <summary>
            This operation lists in-progress multipart uploads. An in-progress 
            multipart upload is a multipart upload that has been initiated, 
            using the InitiateMultipartUpload request, but has not yet been 
            completed or aborted.
            <para>
            This operation returns at most 1,000 multipart uploads in the 
            response by default. The number of multipart uploads can be further 
            limited using the MaxUploads property on the request parameter. If there are 
            additional multipart uploads that satisfy the list criteria, the 
            response will contain an IsTruncated property with the value set to true.
            To list the additional multipart uploads use the KeyMarker and 
            UploadIdMarker properties on the request parameters.
            </para>
            </summary>
            <param name="request">
            The ListMultipartUploadsRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a ListMultipartUploadsResponse from CS.</returns>
        </member>
        <member name="T:GrandCloud.CS.Model.ListObjectsResponse">
            <summary>
            The ListObjectsResponse contains the list of CSObjects in the bucket and
            any headers returned by CS.
            </summary>
            <seealso cref="T:GrandCloud.CS.Model.ListObjectsRequest"/>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.Name">
            <summary>
            Gets and sets the Name property.
            The bucket's name.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.Prefix">
            <summary>
            Gets and sets the Prefix property.
            Keys that begin with the indicated prefix are listed.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.CSObjects">
            <summary>
            Gets the CSObjects property. This is a list of 
            objects in the bucket that match your search criteria.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.NextMarker">
            <summary>
            Gets and sets the NextMarker property.
            NextMarker is set by CS only if a Delimiter was specified
            in the original ListObjects request. If a delimiter was
            not specified, the AWS SDK for .NET returns the last Key
            of the List of Objects retrieved from CS as the NextMarker.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.MaxKeys">
            <summary>
            Gets and sets the MaxKeys property.
            This is the maximum number of keys in the CSObjects collection.
            The value is derived from the MaxKeys parameter to ListObjectsRequest.
            </summary>
            <seealso cref="P:GrandCloud.CS.Model.ListObjectsRequest.MaxKeys"/>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection.
            </summary>
            <remarks>
            These rolled-up keys are not returned elsewhere in the response.
            </remarks>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter. In effect, 
            CommonPrefixes lists keys that act like subdirectories in the directory specified 
            by Prefix. For example, if prefix is notes/ and delimiter is a slash (/), in 
            notes/summer/july, the common prefix is notes/summer/.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.CommonPrefix">
            <summary>
            Returns the list of common prefixes returned by CS.
            This property has been deprecated. Please use the 
            CommonPrefixes property instead.
            <see cref="P:GrandCloud.CS.Model.ListObjectsResponse.CommonPrefixes"/>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListObjectsResponse.IsTruncated">
            <summary>
            Gets and Sets the IsTruncated property. 
            This property governs whether
            this is the last set of items that match the
            specified criteria or whether you need to make
            another call to CS to retrieve more keys.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.DeleteBucketResponse">
            <summary>
            The DeleteBucketResponse contains any headers returned by CS.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.DeleteBucketPolicyRequest">
            <summary>
            The DeleteBucketPolicyRequest contains the parameters used for the DeleteBucketPolicy operation.
            <br />Required Parameters: BucketName
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteBucketPolicyRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket where the policy will be deleted from.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteBucketPolicyRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.DeleteBucketPolicyRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern for the GrandCloudCSClient
            </summary>
            <param name="fDisposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.#ctor">
             <summary>
             Constructs GrandCloudCSClient with the credentials defined in the App.config.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.#ctor(GrandCloud.CS.GrandCloudCSConfig)">
             <summary>
             Constructs GrandCloudCSClient with the credentials defined in the App.config.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSAccessKey" value="********************"/&gt;
                     &lt;add key="AWSSecretKey" value="****************************************"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The GrandCloudCSClient Configuration Object</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs GrandCloudCSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="csAccessKeyId">AWS Access Key ID</param>
            <param name="csSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.#ctor(System.String,System.String,GrandCloud.CS.GrandCloudCSConfig)">
            <summary>
            Constructs GrandCloudCSClient with AWS Access Key ID, AWS Secret Key and an
            GrandCloudCS Configuration object. If the config object's
            UseSecureStringForGrandCloudSecretKey is false, the AWS Secret Key
            is stored as a clear-text string. Please use this option only
            if the application environment doesn't allow the use of SecureStrings.
            </summary>
            <param name="csAccessKeyId">AWS Access Key ID</param>
            <param name="csSecretAccessKey">AWS Secret Access Key</param>
            <param name="config">The CS Configuration Object</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.#ctor(System.String,System.Security.SecureString,GrandCloud.CS.GrandCloudCSConfig)">
            <summary>
            Constructs an GrandCloudCSClient with AWS Access Key ID, AWS Secret Key and an
            GrandCloud CS Configuration object
            </summary>
            <param name="csAccessKeyId">AWS Access Key ID</param>
            <param name="csSecretAccessKey">AWS Secret Access Key as a SecureString</param>
            <param name="config">The CS Configuration Object</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.#ctor(GrandCloud.CS.CSCredentials)">
            <summary>
            Constructs an GrandCloudCSClient with CSCredentials
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.#ctor(GrandCloud.CS.CSCredentials,GrandCloud.CS.GrandCloudCSConfig)">
            <summary>
            Constructs an GrandCloudCSClient with CSCredentials and an
            GrandCloud CS Configuration object
            </summary>
            <param name="credentials"></param>
            <param name="config"></param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.GetPreSignedURL(GrandCloud.CS.Model.GetPreSignedUrlRequest)">
            <summary>
            The GetPreSignedURL operations creates a signed http request.
            Query string authentication is useful for giving HTTP or browser
            access to resources that would normally require authentication.
            When using query string authentication, you create a query,
            specify an expiration time for the query, sign it with your
            signature, place the data in an HTTP request, and distribute
            the request to a user or embed the request in a web page.
            A PreSigned URL can be generated for GET, PUT and HEAD
            operations on your bucket, keys, and versions.
            </summary>
            <param name="request">The GetPreSignedUrlRequest that defines the
            parameters of the operation.</param>
            <returns>A string that is the signed http request.</returns>
            <exception cref="T:System.ArgumentException" />
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ListAllBuckets">
            <summary>
            The ListAllBuckets operation returns a list of all of the buckets
            owned by the authenticated sender of the request.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListBucketsResponse with the response from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginListAllBuckets(System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListAllBuckets operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.EnableBucketLogging"/>
            </summary>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListAllBuckets.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginListAllBuckets(GrandCloud.CS.Model.ListBucketsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListAllBuckets operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.EnableBucketLogging"/>
            </summary>
            <param name="request">The ListBucketsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListAllBuckets.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndListAllBuckets(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListAllBuckets operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListAllBuckets.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListBucketsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ListAllBuckets(GrandCloud.CS.Model.ListBucketsRequest)">
            <summary>
            The ListAllBuckets operation returns a list of all of the buckets
            owned by the authenticated sender of the request.
            </summary>
            <param name="request">The ListBucketsRequest that defines the parameters
            of this operation</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListBucketsResponse with the response from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginGetBucketLocation(GrandCloud.CS.Model.GetBucketLocationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLocation operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.EnableBucketLogging"/>
            </summary>
            <param name="request">The GetBucketLocationRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndGetBucketLocation.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndGetBucketLocation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the GetBucketLocation operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetBucketLocation.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetBucketLocationResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.GetBucketLocation(GrandCloud.CS.Model.GetBucketLocationRequest)">
            <summary>
            The GetBucketLocation operation takes in a bucket's name and lists the location
            of the bucket. This information can be used to determine the bucket's geographical
            location.
            To determine the location of a bucket, you must be the bucket owner.
            </summary>
            <param name="request">The GetBucketLocationRequest that defines the parameters of the operation.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetBucketLocationResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginGetBucketPolicy(GrandCloud.CS.Model.GetBucketPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetBucketPolicy operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.GetBucketPolicy"/>
            </summary>
            <param name="request">The GetBucketPolicyRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndGetBucketPolicy.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndGetBucketPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the GetBucketPolicy operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetBucketPolicy.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetBucketPolicyResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.GetBucketPolicy(GrandCloud.CS.Model.GetBucketPolicyRequest)">
            <summary>
            <para>
            Retrieves the policy for the specified bucket. Only the owner of the
            bucket can retrieve the policy. If no policy has been set for the bucket,
            then an error will be thrown.
            </para>
            <para>
            Bucket policies provide access control management at the bucket level for
            both the bucket resource and contained object resources. Only one policy
            can be specified per-bucket.
            </para>
            <para>
            For more information on forming bucket polices, please check grandcloud ecs documents.        
            </para>
            </summary>
            <param name="request">The GetBucketPolicyRequest that defines the parameters of the operation.</param>
            <returns>Returns a GetBucketPolicyResponse from CS.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginSetBucketPolicy(GrandCloud.CS.Model.PutBucketPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetBucketPolicy operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.SetBucketPolicy"/>
            </summary>
            <param name="request">The PutBucketPolicyRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndSetBucketPolicy.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndSetBucketPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the SetBucketPolicy operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetBucketPolicy.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutBucketPolicyResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.SetBucketPolicy(GrandCloud.CS.Model.PutBucketPolicyRequest)">
            <summary>
            <para>
            Sets the policy associated with the specified bucket. Only the owner of
            the bucket can set a bucket policy. If a policy already exists for the
            specified bucket, the new policy will replace the existing policy.
            </para>
            <para>
            Bucket policies provide access control management at the bucket level for
            both the bucket resource and contained object resources. Only one policy
            may be specified per-bucket.
            </para>
            <para>
            For more information on forming bucket polices, 
            refer: <see href="http://docs.amazonwebservices.com/GrandCloudCS/latest/dev/"/>
            </para>
            </summary>
            <param name="request">The PutBucketPolicyRequest that defines the parameters of the operation.</param>
            <returns>Returns a PutBucketPolicyResponse from CS.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginDeleteBucketPolicy(GrandCloud.CS.Model.DeleteBucketPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketPolicy operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.DeleteBucketPolicy"/>
            </summary>
            <param name="request">The DeleteBucketPolicyRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteBucketPolicy.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndDeleteBucketPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the DeleteBucketPolicy operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteBucketPolicy.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteBucketPolicyResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.DeleteBucketPolicy(GrandCloud.CS.Model.DeleteBucketPolicyRequest)">
            <summary>
            <para>
            Deletes the policy associated with the specified bucket. Only the owner
            of the bucket can delete the bucket policy.
            </para>
            <para>
            If you delete a policy that does not exist, GrandCloud CS will return a
            success (not an error message).
            </para>
            <para>
            Bucket policies provide access control management at the bucket level for
            both the bucket resource and contained object resources. Only one policy
            may be specified per-bucket.
            </para>
            <para>
            For more information on forming bucket polices, 
            refer: <see href="http://docs.amazonwebservices.com/GrandCloudCS/latest/dev/"/>
            </para>
            </summary>
            <param name="request">The DeleteBucketPolicyRequest that defines the parameters of the operation.</param>
            <returns>Returns a DeleteBucketPolicyResponse from CS.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginListObjects(GrandCloud.CS.Model.ListObjectsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListObjects operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.ListObjects"/>
            </summary>
            <param name="request">The ListObjectsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListObjects.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndListObjects(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListObjects operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListObjects.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListObjectsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ListObjects(GrandCloud.CS.Model.ListObjectsRequest)">
            <summary>
            The ListObjects operation lists the objects/keys in a bucket ordered
            lexicographically (from a-Z). The list can be filtered via the Marker
            property of the ListObjectsRequest.
            In order to List Objects, you must have READ access to the bucket.
            </summary>
            <param name="request">
            The ListObjectsRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListObjectsResponse from CS with a list of CSObjects,
            headers and request parameters used to filter the list.</returns>
            <remarks>
            Since buckets can contain a virtually unlimited number of objects, the complete
            results of a list query can be extremely large. To manage large result sets,
            GrandCloud CS uses pagination to split them into multiple responses. Callers should
            always check the <see cref="P:GrandCloud.CS.Model.ListObjectsResponse.IsTruncated" />
            to see if the returned listing
            is complete, or if callers need to make additional calls to get more results.
            The marker parameter allows callers to specify where to start the object listing.
            List performance is not substantially affected by the total number of keys in your
            bucket, nor by the presence or absence of any additional query parameters.
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginCreateBucket(GrandCloud.CS.Model.PutBucketRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateBucket operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.CreateBucket"/>
            </summary>
            <param name="request">The PutBucketRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndCreateBucket.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndCreateBucket(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the CreateBucket operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateBucket.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutBucketResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.CreateBucket(GrandCloud.CS.Model.PutBucketRequest)">
            <summary>
            The CreateBucket operation creates a new CS Bucket.
            Depending on your latency and legal requirements, you can specify a location
            constraint that will affect where your data physically resides.
            </summary>
            <param name="request">
            The PutBucketRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutBucketResponse from CS.</returns>
            <remarks>
            Every object stored in GrandCloud CS is contained in a bucket. Buckets
            partition the namespace of objects stored in GrandCloud CS at the top level.
            Within a bucket, you can use any names for your objects, but bucket names
            must be unique across all of GrandCloud CS.
            <para>
            Buckets are similar to Internet domain names. Just as GrandCloud is the only owner
            of the domain name GrandCloud.com, only one person or organization can own a bucket
            within GrandCloud CS. The similarities between buckets and domain names is not a
            coincidence - there is a direct mapping between GrandCloud CS buckets and subdomains
            of s3.amazonaws.com. Objects stored in GrandCloud CS are addressable using the REST API
            under the domain bucketname.storage.grandcloud.cn. For example, the object homepage.html
            stored in the GrandCloud CS bucket mybucket can be addressed as
            http://mybucket.storage.grandcloud.cn/homepage.html.</para>
            To conform with DNS requirements, the following constraints apply:
            <list type="bullet">
            <item>Bucket names should not contain underscores (_)</item>
            <item>Bucket names should be between 3 and 63 characters long</item>
            <item>Bucket names should not end with a dash</item>
            <item>Bucket names cannot contain two, adjacent periods</item>
            <item>Bucket names cannot contain dashes next to periods
              (e.g., "my-.bucket.com" and "my.-bucket" are invalid)</item>
            <item>Bucket names cannot contain uppercase characters</item>
            </list>
            There is no limit to the number of objects that can be stored in a bucket and no
            variation in performance when using many buckets or just a few. You can store all
            of your objects in a single bucket or organize them across several buckets.
            </remarks>
            <seealso cref="T:GrandCloud.CS.Model.CSRegion"/>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginDeleteBucket(GrandCloud.CS.Model.DeleteBucketRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucket operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.DeleteBucket"/>
            </summary>
            <param name="request">The DeleteBucketRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteBucket.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndDeleteBucket(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the DeleteBucket operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteBucket.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteBucketResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.DeleteBucket(GrandCloud.CS.Model.DeleteBucketRequest)">
            <summary>
            The DeleteBucket operation deletes the bucket named in the request.
            All objects in the bucket must be deleted before the bucket itself can be deleted.
            Only the owner of a bucket can delete it, regardless of the bucket's access control policy.
            </summary>
            <param name="request">
            The DeleteBucketRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteBucketResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginGetObject(GrandCloud.CS.Model.GetObjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.GetObject"/>
            </summary>
            <param name="request">The GetObjectRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndGetObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndGetObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the GetObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.GetObject(GrandCloud.CS.Model.GetObjectRequest)">
            <summary>
            The GetObject operation fetches the most recent version of an CS object
            from the specified CS bucket. You must have READ access to the object.
            If READ access is granted to an anonymous user, an object can be retrieved
            without an authorization header. Providing a version-id for the object will
            fetch the specific version from CS instead of the most recent one.
            </summary>
            <param name="request">
            The GetObjectRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectResponse from CS.</returns>
            <remarks>
            Please wrap the response you get from calling GetObject in a using clause.
            This ensures that all underlying IO resources allocated for the response
            are disposed once the response has been processed. This is one way to
            call GetObject:
            <code>
            using (GetObjectResponse response = csClient.GetObject(request))
            {
                ... Process the response:
                Get the Stream, get the content-length, write contents to disk, etc
            }
            </code>
            To see what resources are cleaned up at the end of the using block, please
            see <see cref="M:GrandCloud.CS.Model.CSResponse.Dispose"/>
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginHeadObject(GrandCloud.CS.Model.GetObjectMetadataRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the HeadObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.HeadObject"/>
            </summary>
            <param name="request">The GetObjectMetadataRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndHeadObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndHeadObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the HeadObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginHeadObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectMetadataResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.HeadObject(GrandCloud.CS.Model.GetObjectMetadataRequest)">
            <summary>
            The HeadObject operation is used to retrieve information about a specific object
            or object size, without actually fetching the object itself. This is useful if you're
            only interested in the object metadata, and don't want to waste bandwidth on the object data.
            The response is identical to the GetObject response, except that there is no response body.
            </summary>
            <param name="request">
            The GetObjectMetadataRequest that defines the parameters of the operation.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a GetObjectMetadataResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginPutObject(GrandCloud.CS.Model.PutObjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PutObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.PutObject"/>
            </summary>
            <param name="request">The PutObjectRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndPutObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndPutObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the PutObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPutObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a PutObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.PutObject(GrandCloud.CS.Model.PutObjectRequest)">
             <summary>
             The PutObject operation adds an object to an CS Bucket.
             The response indicates that the object has been successfully stored.
             GrandCloud CS never stores partial objects: if you receive a successful
             response, then you can be confident that the entire object was stored.
            
             To ensure data is not corrupted over the network, use the Content-MD5
             header. When you use the Content-MD5 header, GrandCloud CS checks the object
             against the provided MD5 value. If they do not match, GrandCloud CS returns an error.
             Additionally, you can calculate the MD5 while putting an object to
             GrandCloud CS and compare the returned Etag to the calculated MD5 value.
            
             If an object already exists in a bucket, the new object will overwrite
             it because GrandCloud CS stores the last write request. However, GrandCloud CS
             is a distributed system. If GrandCloud CS receives multiple write requests
             for the same object nearly simultaneously, all of the objects might be
             stored, even though only one wins in the end. GrandCloud CS does not provide
             object locking; if you need this, make sure to build it into your application
             layer.
            
             If you specify a location constraint when creating a bucket, all objects
             added to the bucket are stored in the bucket's location.
            
             You must have WRITE access to the bucket to add an object.
             </summary>
             <param name="request">
             The PutObjectRequest that defines the parameters of the operation.
             </param>
             <exception cref="T:System.ArgumentException"></exception>
             <exception cref="T:System.ArgumentNullException"></exception>
             <exception cref="T:System.Net.WebException"></exception>
             <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
             <exception cref="T:System.IO.FileNotFoundException"></exception>
             <returns>Returns a PutObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginDeleteObject(GrandCloud.CS.Model.DeleteObjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteObject operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.DeleteObject"/>
            </summary>
            <param name="request">The DeleteObjectRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndDeleteObject.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndDeleteObject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the DeleteObject operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteObject.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a DeleteObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.DeleteObject(GrandCloud.CS.Model.DeleteObjectRequest)">
             <summary>
             The DeleteObject operation removes the specified object from GrandCloud CS.
             Once deleted, there is no method to restore or undelete an object.
            
             If you delete an object that does not exist, GrandCloud CS will return a
             success (not an error message).
             </summary>
             <param name="request">
             The DeleteObjectRequest that defines the parameters of the operation.
             </param>
             <exception cref="T:System.ArgumentNullException"></exception>
             <exception cref="T:System.Net.WebException"></exception>
             <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
             <returns>Returns a DeleteObjectResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginInitiateMultipartUpload(GrandCloud.CS.Model.InitiateMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.InitiateMultipartUpload"/>
            </summary>
            <param name="request">The InitiateMultipartUploadRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndInitiateMultipartUpload.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndInitiateMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the InitiateMultipartUpload operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateMultipartUpload.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a InitiateMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.InitiateMultipartUpload(GrandCloud.CS.Model.InitiateMultipartUploadRequest)">
            <summary>
            This method initiates a multipart upload and returns an InitiateMultipartUploadResponse 
            which contains an upload ID. This upload ID associates all the
            parts in the specific upload. You specify this upload ID in each of 
            your subsequent Upload Part requests. You also include
            this upload ID in the final request to either complete, or abort
            the multipart upload request.
            </summary>
            <param name="request">
            The CopyObjectRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a InitiateMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginUploadPart(GrandCloud.CS.Model.UploadPartRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UploadPart operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.UploadPart"/>
            </summary>
            <param name="request">The UploadPartRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndUploadPart.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndUploadPart(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the UploadPart operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUploadPart.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a UploadPartResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.UploadPart(GrandCloud.CS.Model.UploadPartRequest)">
            <summary>
            This method uploads a part in a multipart upload.  You must initiate a 
            multipart upload before you can upload any part.
            <para>
            Your UploadPart request must include an upload ID and a part number. 
            The upload ID is the ID returned by GrandCloud CS in response to your 
            Initiate Multipart Upload request. For more information on initiating a
            multipart upload. Part number can be any number between 1 and
            10,000, inclusive. A part number uniquely identifies a part and also 
            defines its position within the object being uploaded. If you 
            upload a new part using the same part number as an existing part, 
            that part is overwritten.
            </para>
            <para>
            To ensure data is not corrupted traversing the network, specify the 
            Content-MD5 header in the Upload Part request. GrandCloud CS checks 
            the part data against the provided MD5 value. If they do not match,
            GrandCloud CS returns an error.
            </para>
            <para>
            When you upload a part, the UploadPartResponse response contains an ETag property.
            You should record this ETag property value and the part 
            number. After uploading all parts, you must send a CompleteMultipartUpload
            request. At that time GrandCloud CS constructs a complete object by 
            concatenating all the parts you uploaded, in ascending order based on 
            the part numbers. The CompleteMultipartUpload request requires you to
            send all the part numbers and the corresponding ETag values.
            </para>
            </summary>
            <param name="request">
            The UploadPartRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a UploadPartResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginListParts(GrandCloud.CS.Model.ListPartsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.ListParts"/>
            </summary>
            <param name="request">The ListPartsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListParts.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndListParts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListParts operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListParts.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListPartsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ListParts(GrandCloud.CS.Model.ListPartsRequest)">
            <summary>
            This method lists the parts that have been uploaded 
            for a particular multipart upload.
            <para>
            This method must include the upload ID, returned by 
            the InitiateMultipartUpload request. This request 
            returns a maximum of 1000 uploaded parts by default. You can
            restrict the number of parts returned by specifying the 
            MaxParts property on the ListPartsRequest. If your multipart
            upload consists of more parts than allowed in the 
            ListParts response, the response returns a IsTruncated
            field with value true, and a NextPartNumberMarker property. 
            In subsequent ListParts request you can include the 
            PartNumberMarker property and set its value to the
            NextPartNumberMarker property value from the previous response.
            </para>
            </summary>
            <param name="request">
            The ListPartsRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a ListPartsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginAbortMultipartUpload(GrandCloud.CS.Model.AbortMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.AbortMultipartUpload"/>
            </summary>
            <param name="request">The AbortMultipartUploadRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndAbortMultipartUpload.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndAbortMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the AbortMultipartUpload operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAbortMultipartUpload.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a AbortMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.AbortMultipartUpload(GrandCloud.CS.Model.AbortMultipartUploadRequest)">
            <summary>
            This method aborts a multipart upload. After a multipart upload is 
            aborted, no additional parts can be uploaded using that upload ID. 
            The storage consumed by any previously uploaded parts will be freed.
            However, if any part uploads are currently in progress, those part 
            uploads may or may not succeed. As a result, it may be necessary to 
            abort a given multipart upload multiple times in order to completely free
            all storage consumed by all parts.
            </summary>
            <param name="request">
            The AbortMultipartUploadRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a AbortMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginCompleteMultipartUpload(GrandCloud.CS.Model.CompleteMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.CompleteMultipartUpload"/>
            </summary>
            <param name="request">The CompleteMultipartUploadRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndCompleteMultipartUpload.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndCompleteMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the CompleteMultipartUpload operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCompleteMultipartUpload.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a CompleteMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.CompleteMultipartUpload(GrandCloud.CS.Model.CompleteMultipartUploadRequest)">
            <summary>
            This operation completes a multipart upload by assembling 
            previously uploaded parts.
            <para>
            You first upload all parts using the UploadPart method. 
            After successfully uploading all relevant parts of an upload, 
            you call this operation to complete the upload. Upon receiving
            this request, GrandCloud CS concatenates all the parts in ascending 
            order by part number to create a new object. In the 
            CompleteMultipartUpload request, you must provide the 
            parts list. For each part in the list, you provide the 
            part number and the ETag header value, returned after that 
            part was uploaded.
            </para>
            <para>
            Processing of a CompleteMultipartUpload request may take 
            several minutes to complete.
            </para>
            </summary>
            <param name="request">
            The CompleteMultipartUploadRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a CompleteMultipartUploadResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.BeginListMultipartUploads(GrandCloud.CS.Model.ListMultipartUploadsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation. 
            <seealso cref="M:GrandCloud.CS.GrandCloudCS.ListMultipartUploads"/>
            </summary>
            <param name="request">The ListMultipartUploadsRequest that defines the parameters of
            the operation.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the AsyncState property.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; 
            this value is also needed when invoking EndListMultipartUploads.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.EndListMultipartUploads(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the ListMultipartUploads operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListMultipartUploads.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
            <exception cref="T:GrandCloud.CS.GrandCloudCSException"></exception>
            <returns>Returns a ListMultipartUploadsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ListMultipartUploads(GrandCloud.CS.Model.ListMultipartUploadsRequest)">
            <summary>
            This operation lists in-progress multipart uploads. An in-progress 
            multipart upload is a multipart upload that has been initiated, 
            using the InitiateMultipartUpload request, but has not yet been 
            completed or aborted.
            <para>
            This operation returns at most 1,000 multipart uploads in the 
            response by default. The number of multipart uploads can be further 
            limited using the MaxUploads property on the request parameter. If there are 
            additional multipart uploads that satisfy the list criteria, the 
            response will contain an IsTruncated property with the value set to true.
            To list the additional multipart uploads use the KeyMarker and 
            UploadIdMarker properties on the request parameters.
            </para>
            </summary>
            <param name="request">
            The ListMultipartUploadsRequest that defines the parameters of the operation.
            </param>
            <returns>Returns a ListMultipartUploadsResponse from CS.</returns>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertListBuckets(GrandCloud.CS.Model.ListBucketsRequest)">
            Convert ListBucketsRequest to key/value pairs
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertGetBucketLocation(GrandCloud.CS.Model.GetBucketLocationRequest)">
            Convert GetBucketLocationRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertListObjects(GrandCloud.CS.Model.ListObjectsRequest)">
            Convert ListObjectsRequest to key/value pairs
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertPutBucket(GrandCloud.CS.Model.PutBucketRequest)">
            Converts the PutBucketRequest to key/value pairs
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertDeleteBucket(GrandCloud.CS.Model.DeleteBucketRequest)">
            Convert DeleteBucketRequest to key/value pairs
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertGetBucketPolicy(GrandCloud.CS.Model.GetBucketPolicyRequest)">
            Convert GetBucketPolicyRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertPutBucketPolicy(GrandCloud.CS.Model.PutBucketPolicyRequest)">
            Convert PutBucketPolicyRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertDeleteBucketPolicy(GrandCloud.CS.Model.DeleteBucketPolicyRequest)">
            Convert DeleteBucketPolicyRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertGetObject(GrandCloud.CS.Model.GetObjectRequest)">
            Convert GetObjectRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertGetObjectMetadata(GrandCloud.CS.Model.GetObjectMetadataRequest)">
            Convert GetObjectMetadataRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertPutObject(GrandCloud.CS.Model.PutObjectRequest)">
            Convert PutObjectRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertGetPreSignedUrl(GrandCloud.CS.Model.GetPreSignedUrlRequest)">
            Convert GetPreSignedUrlRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertDeleteObject(GrandCloud.CS.Model.DeleteObjectRequest)">
            Convert DeleteObjectRequest to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertInitiateMultipartUpload(GrandCloud.CS.Model.InitiateMultipartUploadRequest)">
            Convert InitiateMultipartUpload to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertAbortMultipartUpload(GrandCloud.CS.Model.AbortMultipartUploadRequest)">
            Convert AbortMultipartUploadRequest for enable logging, to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertListMultipartUploads(GrandCloud.CS.Model.ListMultipartUploadsRequest)">
            Convert ListMultipartUploadsRequest for enable logging, to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertListParts(GrandCloud.CS.Model.ListPartsRequest)">
            Convert ListPartsRequest for enable logging, to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertCompleteMultipartUpload(GrandCloud.CS.Model.CompleteMultipartUploadRequest)">
            Convert CompleteMultipartUploadRequest for enable logging, to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.ConvertUploadPart(GrandCloud.CS.Model.UploadPartRequest)">
            Convert SetBucketLoggingRequest for enable logging, to key/value pairs.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.addCSQueryParameters(GrandCloud.CS.Model.CSRequest,GrandCloud.CS.ImmutableCredentials)">
            Add authentication related and version parameters
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.addUrlToParameters(GrandCloud.CS.Model.CSRequest,GrandCloud.CS.GrandCloudCSConfig)">
            Build the Url from the parameters passed in.
            Component parts are:
            - ServiceURL from the Config
            - Bucket
            - Key
            - urlPrefix
            - Query
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.CodeForUrlWithDot">
            Code for fixing a bug in C#
            The problem is when the url is like http://storage.grandcloud.cn/test./ , Uri class will remove the last "." in the url,
            this function is to fix this problem.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.configureWebRequest(GrandCloud.CS.Model.CSRequest,System.Int64,GrandCloud.CS.ImmutableCredentials)">
            Configure HttpClient with set of defaults as well as configuration
            from AmazonEC2Config instance
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.pauseOnRetry(System.Int32,System.Int32,System.Net.HttpStatusCode,System.String,System.Net.WebHeaderCollection,System.Exception)">
            Exponential sleep on failed request
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.setIfMatchHeader(System.Net.WebHeaderCollection,System.String)">
             <summary>
             Sets the If-Match Header in the specified header collection.
            
             Return the object only if its entity tag (ETag) is the same as the one
             specified, otherwise return a 412 (precondition failed).
             </summary>
             <param name="headers">The header collection to add the new header to</param>
             <param name="eTag">The ETag to match against</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.setIfNoneMatchHeader(System.Net.WebHeaderCollection,System.String)">
             <summary>
             Set the If-None-Match Header in the specified header collection.
            
             Return the object only if its entity tag (ETag) is different from the one
             specified, otherwise return a 304 (not modified).
             </summary>
             <param name="headers">The header collection to add the new header to</param>
             <param name="eTag">The ETag to match against</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.setIfModifiedSinceHeader(System.Net.WebHeaderCollection,System.DateTime)">
             <summary>
             Sets the If-Modifed-Since Header in the specified header collection.
            
             Return the object only if it has been modified since the specified time,
             otherwise return a 304 (not modified).
             </summary>
             <param name="headers">The header collection to add the new header to</param>
             <param name="date">DateTime Object representing the date to use</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.setIfUnmodifiedSinceHeader(System.Net.WebHeaderCollection,System.DateTime)">
             <summary>
             Sets the If-Unmodifed-Since Header in the specified header collection.
            
             Return the object only if it has not been modified since the specified time,
             otherwise return a 412 (precondition failed).
             </summary>
             <param name="headers">The header collection to add the new header to</param>
             <param name="date">DateTime Object representing the date to use</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.buildSigningString(System.Collections.Generic.IDictionary{GrandCloud.CS.Model.CSQueryParameter,System.String},System.Net.WebHeaderCollection)">
            Creates a string based on the parameters and encrypts it using
            key. Returns the encrypted string.
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSClient.buildCanonicalizedHeaders(System.Net.WebHeaderCollection)">
            Returns a string of all x-amz headers sorted by Ordinal.
        </member>
        <member name="T:GrandCloud.CS.Model.GetObjectMetadataRequest">
            <summary>
            The GetObjectMetadataRequest contains the parameters used for the HeadObject operation.
            <br />Required Parameters: BucketName, Key
            <br />Optional Parameters: ModifiedSinceDate, UnmodifiedSinceDate, ETagToMatch, ETagToNotMatch
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket that contains the CS Object with
            the metadata you want.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object's metadata you want.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.WithModifiedSinceDate(System.DateTime)">
            <summary>
            Sets the ModifiedSinceDate property for this request.
            When this is set the CS object metadata is returned 
            only if it has been modified since the specified time, 
            otherwise returns a 304 (not modified).
            </summary>
            <param name="modifiedSinceDate">The value that ModifiedSinceDate is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.WithUnmodifiedSinceDate(System.DateTime)">
            <summary>
            Sets the UnmodifiedSinceDate property for this request.
            When this is set the CS object metadata is returned only 
            if it has not been modified since the specified time, 
            otherwise return a 412 (precondition failed).
            </summary>
            <param name="unmodifiedSinceDate">The value that UnmodifiedSinceDate is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.WithETagToMatch(System.String)">
            <summary>
            Sets the ETagToMatch property for this request.
            When this is set the CS object metadatais returned 
            only if its entity tag (ETag) is the same as the one 
            specified, otherwise return a 412 (precondition failed).
            </summary>
            <param name="etagToMatch">The value that ETagToMatch is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.IsSetETagToMatch">
            <summary>
            Checks if ETagToMatch property is set.
            </summary>
            <returns>true if ETagToMatch property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.WithETagToNotMatch(System.String)">
            <summary>
            Sets the ETagToNotMatch property for this request.
            When this is set the CS object metadata is returned 
            only if its entity tag (ETag) is different from the one 
            specified, otherwise return a 304 (not modified).
            </summary>
            <param name="etagToNotMatch">The value that ETagToNotMatch is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetObjectMetadataRequest.IsSetETagToNotMatch">
            <summary>
            Checks if ETagToNotMatch property is set.
            </summary>
            <returns>true if ETagToNotMatch property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataRequest.ModifiedSinceDate">
            <summary>
            Gets and sets the ModifiedSinceDate property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataRequest.UnmodifiedSinceDate">
            <summary>
            Gets and sets the UnmodifiedSinceDate property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataRequest.ETagToMatch">
            <summary>
            Gets and sets the ETagToMatch property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.GetObjectMetadataRequest.ETagToNotMatch">
            <summary>
            Gets and sets the ETagToNotMatch property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.GrandCloudCSException">
            <summary>
            GrandCloud CS Exception provides details of errors returned by GrandCloud CS service.
            
            In particular, this class provides access to CS's extended request ID, the Date,
            and the host ID which are required debugging information in the odd case that 
            you need to contact GrandCloud about an issue where GrandCloud CS is incorrectly handling 
            a request.
            
            The ResponseHeaders property of the GrandCloudCSException contains all the HTTP headers
            in the Error Response returned by the CS service.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor">
            <summary>
            Initializes a new GrandCloudCSException with default values.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.String)">
            <summary>
            Initializes a new GrandCloudCSException with a specified error message
            </summary>
            <param name="message">A message that describes the error</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.Exception)">
            <summary>
            Initializes a new GrandCloudCSException from the inner exception that is
            the cause of this exception.
            </summary>
            <param name="innerException">The nested exception that caused the GrandCloudCSException</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new GrandCloudCSException with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.
            </param>
            <param name="context">The contextual information about the source or destination.
            </param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes this instance of GrandCloudCSException.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.
            </param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new GrandCloudCSException with a specific error message and the inner exception
            that is the cause of this exception.
            </summary>
            <param name="message">Overview of error</param>
            <param name="innerException">The exception that is the cause of the current exception.
            If the innerException parameter is not a null reference, the current exception is
            raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Initializes an GrandCloudCSException with a specific message and
            HTTP status code
            </summary>
            <param name="message">Overview of error</param>
            <param name="statusCode">HTTP status code for error response</param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.String,System.Net.HttpStatusCode,System.String,System.String,System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            Initializes an GrandCloudCSException with error information provided in an
            GrandCloudCS response.
            </summary>
            <param name="message">Overview of error</param>
            <param name="statusCode">HTTP status code for error response</param>
            <param name="errorCode">Error Code returned by the service</param>
            <param name="requestId">Request ID returned by the service</param>
            <param name="xml">Compete xml found in response</param>
            <param name="requestAddr">The CS request url</param>
            <param name="responseHeaders">The response headers containing CS specific information
            </param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.String,System.Net.HttpStatusCode,System.String,System.Net.WebHeaderCollection,System.Exception)">
            <summary>
            Initializes an GrandCloudCSException with error information provided in an
            GrandCloudCS response and the inner exception that is the cause of the exception
            </summary>
            <param name="message">Overview of error</param>
            <param name="statusCode">HTTP status code for error response</param>
            <param name="requestAddr">The CS request url</param>
            <param name="responseHeaders">The response headers containing CS specific information
            <param name="innerException">The nested exception that caused the GrandCloudCSException</param>
            </param>
        </member>
        <member name="M:GrandCloud.CS.GrandCloudCSException.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.Net.WebHeaderCollection,GrandCloud.CS.Model.CSError)">
            <summary>
            Initializes an GrandCloudCSException with error information provided in an
            GrandCloudCS response and the inner exception that is the cause of the exception
            </summary>
            <param name="statusCode">HTTP status code for error response</param>
            <param name="xml">Compete xml found in response</param>
            <param name="requestAddr">The CS request url</param>
            <param name="responseHeaders">The response headers containing CS specific information
            <param name="error">The nested exception that caused the GrandCloudCSException</param>
            </param>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSException.ErrorCode">
            <summary>
            Gets the ErrorCode property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSException.Message">
            <summary>
            Gets error message
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSException.StatusCode">
            <summary>
            Gets status code returned by the service if available. If status
            code is set to -1, it means that status code was unavailable at the
            time exception was thrown
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSException.XML">
            <summary>
            Gets XML returned by the service if available.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSException.RequestId">
            <summary>
            Gets Request ID returned by the service if available.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSException.CSRequestAddress">
            <summary>
            Gets the CS service address used to make this request.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.GrandCloudCSException.ResponseHeaders">
             <summary>
             Gets the error response HTTP headers so that CS specific information
             can be retrieved for debugging. Interesting field is:
              Date
            
             A value can be retrieved from this HeaderCollection via:
             ResponseHeaders.Get("key");
             </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PutBucketPolicyResponse">
            <summary>
            The PutBucketPolicyResponse contains any headers returned by CS.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.AbortMultipartUploadResponse">
            <summary>
            The AbortMultipartUploadResponse contains any headers returned by CS.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.UploadPartRequest">
            <summary>
            The UploadPartRequest contains the parameters used for the UploadPart method. 
            <para>
            If PartSize is not specified then the rest of the content from the file
            or stream will be sent to GrandCloud CS.
            </para>
            <para>
            You must set either the FilePath or InputStream.  If FilePath is set then the FilePosition
            property must be set.
            </para>
            <br />Required Parameters: BucketName, Key, UploadId, PartNumber
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket where the CS Object you are
            creating gets put.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object you create.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithUploadId(System.String)">
            <summary>
            Sets the UploadId property for this request.
            This is the upload id for the multipart upload in process.
            </summary>
            <param name="uploadId">The value that UploadId is set to</param>
            <returns>the request with the UploadId set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetUploadId">
            <summary>
            Checks if UploadId property is set.
            </summary>
            <returns>true if UploadId property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithPartNumber(System.Int32)">
            <summary>
            Sets the PartNumber property for this request.
            </summary>
            <param name="partNumber">The value that PartNumber is set to</param>
            <returns>the request with the PartNumber set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetPartNumber">
            <summary>
            Checks if PartNumber property is set.
            </summary>
            <returns>true if PartNumber property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithPartSize(System.Int64)">
            <summary>
            Sets the PartSize property for this request.
            </summary>
            <param name="partSize">The value that PartSize is set to</param>
            <returns>the request with the PartSize set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetPartSize">
            <summary>
            Checks if PartSize property is set.
            </summary>
            <returns>true if PartSize property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithMD5Digest(System.String)">
            <summary>
            Sets the MD5Digest property for this request.
            </summary>
            <param name="md5Digest">The value that Md5Digest is set to</param>
            <returns>the request with the Md5Digest set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetMD5Digest">
            <summary>
            Checks if Md5Digest property is set.
            </summary>
            <returns>true if Md5Digest property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithGenerateChecksum(System.Boolean)">
            <summary>
            Sets the GenerateMD5Digest property. If this property is set,
            the MD5 md5Digest of the part to be uploaded is generated
            prior to the data being sent to CS.
            </summary>
            <param name="fGenerateMD5Digest">GenerateMD5Digest property</param>
            <returns>this instance</returns>
            <remarks>This is a computationally expensive operation,
            and will add to the total time it will take to upload
            data to CS. Please use this option judicially.
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithFilePath(System.String)">
            <summary>
            Sets the FilePath property for this request.
            </summary>
            <param name="filePath">The value that FilePath is set to</param>
            <returns>the request with the FilePath set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetFilePath">
            <summary>
            Checks if FilePath property is set.
            </summary>
            <returns>true if FilePath property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithFilePosition(System.Int64)">
            <summary>
            Sets the FilePosition property for this request.
            </summary>
            <param name="filePosition">The value that FilePosition is set to</param>
            <returns>the request with the FilePosition set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.IsSetFilePosition">
            <summary>
            Checks if FilePosition property is set.
            </summary>
            <returns>true if FilePosition property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithTimeout(System.Int32)">
            <summary>
            Sets the Timeout property (in milliseconds).
            Please set the timeout only if you are certain that
            the file will not be transferred within the default intervals
            for an HttpWebRequest.
            </summary>
            <param name="timeout">Timeout property</param>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <returns>this instance</returns>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithReadWriteTimeout(System.Int32)">
            <summary>
            Sets the ReadWriteTimeout property (in milliseconds). 
            The value of this property is assigned to the
            ReadWriteTimeout property of the HttpWebRequest.
            </summary>
            <param name="readWriteTimeout">ReadWriteTimeout property</param>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <returns>this instance</returns>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.WithSubscriber(System.EventHandler{GrandCloud.CS.Model.UploadPartProgressArgs})">
            <summary>
            The "handler" will be notified every time a put
            object progress event is raised.
            </summary>
            <param name="handler">A method that consumes the put object progress notification</param>
            <returns>this instance of the PutObjectRequest</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartRequest.OnRaiseProgressEvent(System.Int64,System.Int64,System.Int64)">
            <summary>
            This method is called by a producer of put object progress
            notifications. When called, all the subscribers in the 
            invocation list will be called sequentially.
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.UploadId">
            <summary>
            Gets and sets the UploadId property.
            This is the upload id for the multipart upload in process.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.PartNumber">
            <summary>
            Gets and sets the PartNumber property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.PartSize">
            <summary>
            Gets and sets the PartSize property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.MD5Digest">
            <summary>
            Gets and sets the MD5Digest property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.GenerateMD5Digest">
            <summary>
            Gets and Sets the property that governs whether
            a md5Digest is generated for the part being
            PUT into CS.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.FilePath">
            <summary>
            Gets and sets the FilePath property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.FilePosition">
            <summary>
            Gets and sets the FilePosition property.  This field is required when
            a file path is specified.  It is ignored when using the InputStream property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.Timeout">
            <summary>
            Gets and sets of the Timeout property (in milliseconds).
            The value of this property is assigned to the
            Timeout property of the HTTPWebRequest object
            used for CS PUT Object requests.
            </summary>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
        </member>
        <member name="P:GrandCloud.CS.Model.UploadPartRequest.ReadWriteTimeout">
            <summary>
            Gets and sets of the ReadWriteTimeout property (in milliseconds).
            The value of this property is assigned to the
            ReadWriteTimeout property of the HTTPWebRequest object
            used for CS PUT Object requests.
            </summary>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
        </member>
        <member name="E:GrandCloud.CS.Model.UploadPartRequest.UploadPartProgressEvent">
            <summary>
            The event for Put Object progress notifications. All
            subscribers will be notified when a new progress
            event is raised.
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            put object progress notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, PutObjectProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the Put Object Progress Event delegate's invocation list
            <code>
            PutObjectRequest request = new PutObjectRequest();
            request.PutObjectProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="T:GrandCloud.CS.Model.UploadPartProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            transfer progress to subscribers of the Put Object
            Event.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.UploadPartProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="T:GrandCloud.CS.Model.PutObjectRequest">
            <summary>
            The PutObjectRequest contains the parameters used for the PutObject operation.
            <br />Must set only 1 of ContentBody, InputStream, or FilePath
            <br />Required Parameters: BucketName, Key
            <br />Optional Parameters: MD5Digest, GenerateMD5Digest,
            ContentType, Metadata, Timeout
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithSubscriber(System.EventHandler{GrandCloud.CS.Model.PutObjectProgressArgs})">
            <summary>
            The "handler" will be notified every time a put
            object progress event is raised.
            </summary>
            <param name="handler">A method that consumes the put object progress notification</param>
            <returns>this instance of the PutObjectRequest</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket where the CS Object you are
            creating gets put.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithKey(System.String)">
            <summary>
            Sets the Key property for this request.
            This is the Key for the CS Object you create.
            </summary>
            <param name="key">The value that Key is set to</param>
            <returns>the request with the Key set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithFilePath(System.String)">
            <summary>
            Sets the FilePath property for this request.
            If this is set the request will upload the
            specified file to CS. Provide FilePath as an
            absolute path.
            </summary>
            <param name="filePath">The value that FilePath is set to</param>
            <returns>the request with the FilePath set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.IsSetFilePath">
            <summary>
            Checks if FilePath property is set.
            </summary>
            <returns>true if FilePath property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithMD5Digest(System.String)">
            <summary>
            Sets the MD5Digest property. This is the MD5 Hash of the file.
            If supplied, after the file has been uploaded to CS,
            CS checks to ensure that the MD5 hash of the uploaded file
            matches the hash supplied.
            </summary>
            <param name="digest">MD5Digest property</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.IsSetMD5Digest">
            <summary>
            Checks if MD5Digest property is set.
            </summary>
            <returns>true if MD5Digest property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithGenerateChecksum(System.Boolean)">
            <summary>
            Sets the GenerateMD5Digest property. If this property is set,
            the MD5 md5Digest of the data to be uploaded is generated
            prior to the data being sent to CS.
            </summary>
            <param name="fGenerateMD5Digest">GenerateMD5Digest property</param>
            <returns>this instance</returns>
            <remarks>This is a computationally expensive operation,
            and will add to the total time it will take to upload
            data to CS. Please use this option judicially.
            </remarks>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithContentType(System.String)">
            <summary>
            Sets the ContentType property for this request.
            This property defaults to "binary/octet-stream",
            but if you require something else you can set this property.
            </summary>
            <param name="contentType">the value the ContentType to be set to</param>
            <returns>The request with the ContentType set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.IsSetContentType">
            <summary>
            Checks if ContentType property is set.
            </summary>
            <returns>true if ContentType property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithContentBody(System.String)">
            <summary>
            Sets the ContentBody property for this request.
            Use this property if you want to upload plaintext to
            CS. The ContentBody is the data for your CS Object.
            </summary>
            <param name="contentBody">the value the ContentBody to be set to</param>
            <returns>The request with the ContentBody set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.IsSetContentBody">
            <summary>
            Checks if ContentBody property is set.
            </summary>
            <returns>true if ContentBody property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithMetaData(System.String,System.String)">
            <summary>
            Adds a key/value pair to the Metadata property for this request.
            The CS Object that you create will have this metadata associated
            with it.
            </summary>
            <param name="key">The key to associate with the object</param>
            <param name="value">The value for the key</param>
            <returns>The response with Metadata set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithMetaData(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Adds a set of key-value pairs to the request
            </summary>
            <param name="metaInfo">The set of key-value pairs that will eventually be
            associated with the CS Object</param>
            <returns></returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.IsSetMetaData">
            <summary>
            Checks if Metadata property is set.
            </summary>
            <returns>true if Metadata property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.RemoveMetaData(System.String)">
            <summary>
            Removes a key from the Metadata list if it was
            added previously
            </summary>
            <param name="key">The key to remove</param>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithTimeout(System.Int32)">
            <summary>
            Sets the Timeout property (in milliseconds).
            Please set the timeout only if you are certain that
            the file will not be transferred within the default intervals
            for an HttpWebRequest.
            </summary>
            <param name="timeout">Timeout property</param>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <returns>this instance</returns>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithReadWriteTimeout(System.Int32)">
            <summary>
            Sets the ReadWriteTimeout property (in milliseconds). 
            The value of this property is assigned to the
            ReadWriteTimeout property of the HttpWebRequest.
            </summary>
            <param name="readWriteTimeout">ReadWriteTimeout property</param>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <returns>this instance</returns>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithStorageClass(GrandCloud.CS.Model.CSStorageClass)">
            <summary>
            Sets the StorageClass property for this request.
            Default: CSStorageClass.Standard. Set this property
            only if you want reduced redundancy for this object.
            Please refer to 
            <see cref="T:GrandCloud.CS.Model.CSStorageClass"/> for
            information on CS Storage Classes.
            </summary>
            <param name="sClass">The Storage Class to be set on the object</param>
            <returns>The request with the StorageClass set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.OnRaiseProgressEvent(System.Int64,System.Int64,System.Int64)">
            <summary>
            This method is called by a producer of put object progress
            notifications. When called, all the subscribers in the 
            invocation list will be called sequentially.
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectRequest.WithAutoCloseStream(System.Boolean)">
            <summary>
            Sets the AutoCloseStream property for this request. If this value is set to true
            then the stream used with this request will be closed when all the content 
            is read from the stream.  The property is defaulted to true.
            </summary>
            <param name="autoCloseStream">the value the AutoCloseStream to be set to</param>
            <returns>The request with the AutoCloseStream set</returns>
        </member>
        <member name="E:GrandCloud.CS.Model.PutObjectRequest.PutObjectProgressEvent">
            <summary>
            The event for Put Object progress notifications. All
            subscribers will be notified when a new progress
            event is raised.
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            put object progress notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, PutObjectProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the Put Object Progress Event delegate's invocation list
            <code>
            PutObjectRequest request = new PutObjectRequest();
            request.PutObjectProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.FilePath">
            <summary>
            Gets and sets the FilePath property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.MD5Digest">
            <summary>
            Gets and sets the MD5 Digest property.
            <remarks>
            The base64 encoded 128-bit MD5 digest of the message
            (without the headers) according to RFC 1864. This header
            can be used as a message integrity check to verify that
            the data is the same data that was originally sent.
            Although it is optional, we recommend using the
            Content-MD5 mechanism as an end-to-end integrity check.
            </remarks>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.GenerateMD5Digest">
            <summary>
            Gets and Sets the property that governs whether
            a md5Digest is generated for the object being
            PUT into CS.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.ContentType">
            <summary>
            Gets and sets the ContentType property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.ContentBody">
            <summary>
            Gets and sets the ContentBody property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.Timeout">
            <summary>
            Gets and sets of the Timeout property (in milliseconds).
            The value of this property is assigned to the
            Timeout property of the HTTPWebRequest object used
            for CS PUT Object requests.
            </summary>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.ReadWriteTimeout">
            <summary>
            Gets and sets of the ReadWriteTimeout property (in milliseconds).
            The value of this property is assigned to the
            ReadWriteTimeout property of the HTTPWebRequest object
            used for CS PUT Object requests.
            </summary>
            <remarks>A value less than or equal to 0 will be silently ignored</remarks>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.StorageClass">
            <summary>
            Gets and sets the StorageClass property.
            Default: CSStorageClass.Standard. Set this property
            only if you want reduced redundancy for this object.
            Please refer to 
            <see cref="T:GrandCloud.CS.Model.CSStorageClass"/> for
            information on CS Storage Classes.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.PutObjectRequest.AutoCloseStream">
            <summary>
            Gets and sets the AutoCloseStream property. If this value is set to true
            then the stream used with this request will be closed when all the content 
            is read from the stream.  The property is defaulted to true.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.PutObjectProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            transfer progress to subscribers of the Put Object
            Event.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.PutObjectProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="T:GrandCloud.CS.Model.ListMultipartUploadsRequest">
            <summary>
            The ListMultipartUploadsRequest contains the parameters used for the ListMultipartUploads method.
            <br />Required Parameters: BucketName
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.WithMaxUploads(System.Int32)">
            <summary>
            Sets the MaxUploads property for this request.
            </summary>
            <param name="maxUploads">The value that MaxUploads is set to</param>
            <returns>the request with the MaxUploads set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.IsSetMaxUploads">
            <summary>
            Checks if MaxUploads property is set.
            </summary>
            <returns>true if MaxUploads property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.WithKeyMarker(System.String)">
            <summary>
            Sets the KeyMarker property for this request.
            </summary>
            <param name="keyMarker">The value that KeyMarker is set to</param>
            <returns>the request with the KeyMarker set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.IsSetKeyMarker">
            <summary>
            Checks if KeyMarker property is set.
            </summary>
            <returns>true if KeyMarker property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.WithUploadIdMarker(System.String)">
            <summary>
            Sets the UploadIdMarker property for this request.
            </summary>
            <param name="uploadIdMarker">The value that UploadIdMarker is set to</param>
            <returns>the request with the UploadIdMarker set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.IsSetUploadIdMarker">
            <summary>
            Checks if UploadIdMarker property is set.
            </summary>
            <returns>true if UploadIdMarker property is set.</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.WithPrefix(System.String)">
            <summary>
            Sets the Prefix property for this request.
            All keys matched will have this prefix.
            </summary>
            <param name="prefix">The value that Prefix is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.IsSetPrefix">
            <summary>
            Checks if Prefix property is set
            </summary>
            <returns>true if Prefix property is set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.WithDelimiter(System.String)">
            <summary>
            Sets the Delimiter property for this request.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection. 
            These rolled-up keys are not returned elsewhere in the response.
            </summary>
            <param name="delimiter">the value that Delimiter is set to.</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.ListMultipartUploadsRequest.IsSetDelimiter">
            <summary>
            Checks if Delimiter property is set
            </summary>
            <returns>true if Delimiter property is set</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsRequest.MaxUploads">
            <summary>
            Gets and sets the MaxUploads property.
            <para>
            Sets the maximum number of multipart uploads to return in the response 
            body
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsRequest.KeyMarker">
            <summary>
            Gets and sets the KeyMarker property.
            <para>
            Together with UploadIdMarker, specifies the multipart upload after
            which listing should begin.
            </para>
            <para>
            If UploadIdMarker is not specified, only the keys lexicographically
            greater than the specified key-marker will be included in the list.
            </para>
            <para>
            If UploadIdMarker is specified, any multipart uploads for a key
            equal to the key-marker may also be included, provided those multipart
            uploads have upload IDs lexicographically greater than the specified
            UploadIdMarker.
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsRequest.UploadIdMarker">
            <summary>
            Gets and sets the UploadIdMarker property.
            <para>
            Together with KeyMarker, specifies the multipart upload after which
            listing should begin. If KeyMarker is not specified, the
            UploadIdMarker parameter is ignored. Otherwise, any multipart
            uploads for a key equal to the KeyMarker may be included in the list
            only if they have an upload ID lexicographically greater than the specified
            </para>
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsRequest.Prefix">
            <summary>
            Gets and sets the Prefix property.
            All keys matched will have this prefix.
            </summary>
        </member>
        <member name="P:GrandCloud.CS.Model.ListMultipartUploadsRequest.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection.
            </summary>
            <remarks>
            These rolled-up keys are not returned elsewhere in the response.
            </remarks>
        </member>
        <member name="T:GrandCloud.CS.Model.GetBucketPolicyResponse">
            <summary>
            The GetBucketPolicyResponse contains the JSON string representation of the policy
            any headers returned by CS.
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.GetBucketPolicyResponse.ProcessResponseBody(System.String)">
            <summary>
            The request to get the policy is return as the content
            body of the response.
            </summary>
            <param name="responseBody">The policy</param>
        </member>
        <member name="P:GrandCloud.CS.Model.GetBucketPolicyResponse.Policy">
            <summary>
            Gets and sets the Policy property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.DeleteBucketRequest">
            <summary>
            The DeleteBucketRequest contains the parameters used for the DeleteBucket operation.
            <br />Required Parameters: BucketName
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteBucketRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket that you want to delete.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>the request with the BucketName set</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.DeleteBucketRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.DeleteBucketRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.GetBucketPolicyRequest">
            <summary>
            The GetBucketPolicyRequest contains the parameters used for the GetBucketPolicy operation.
            <br />Required Parameters: BucketName
            </summary>
        </member>
        <member name="M:GrandCloud.CS.Model.GetBucketPolicyRequest.WithBucketName(System.String)">
            <summary>
            Sets the BucketName property for this request.
            This is the CS Bucket the request will get the location for.
            </summary>
            <param name="bucketName">The value that BucketName is set to</param>
            <returns>this instance</returns>
        </member>
        <member name="M:GrandCloud.CS.Model.GetBucketPolicyRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="P:GrandCloud.CS.Model.GetBucketPolicyRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.GetBucketLocationResponse">
            <summary>
            The GetBucketLocationResponse contains the GetBucketLocationResult and 
            any headers returned by CS.
            </summary>    
        </member>
        <member name="P:GrandCloud.CS.Model.GetBucketLocationResponse.Location">
            <summary>
            Gets and sets the Location property.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CSRegion">
            <summary>
            An enumeration of all possible CS Bucket region possibilities. For
            more information, refer:
            <see href="http://www.grandcloud.cn/help/lists/107"/>
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.CSRegion.DEFAULT">
            <summary>
            Specifies that the CS Bucket should use default locality.
            This is the default value, which is decided by the server side.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.CSRegion.HUADONG1">
            <summary>
            Specifies that the CS Bucket should use HUADONG1 locality.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.CSRegion.HUABEI1">
            <summary>
            Specifies that the CS Bucket should use HUABEI1 locality.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.Protocol">
            <summary>
            An enumeration of all protocols that the pre-signed
            URL can be created against.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.Protocol.HTTPS">
            <summary>
            https protocol will be used in the pre-signed URL.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.Protocol.HTTP">
            <summary>
            http protocol will be used in the pre-signed URL.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.HttpVerb">
            <summary>
            An enumeration of supported HTTP verbs
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.HttpVerb.GET">
            <summary>
            The GET HTTP verb.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.HttpVerb.HEAD">
            <summary>
            The HEAD HTTP verb.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.HttpVerb.PUT">
            <summary>
            The PUT HTTP verb.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.HttpVerb.DELETE">
            <summary>
            The DELETE HTTP verb.
            </summary>
        </member>
        <member name="T:GrandCloud.CS.Model.CSStorageClass">
            <summary>
            Specifies the Storage Class of of an CS object. Possible values
            are: <list type="bullet">
            <item>ReducedRedundancy: provides a 99.99% durability guarantee</item>
            <item>Standard: provides a 99.999999999% durability guarantee</item>
            </list>
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.CSStorageClass.Standard">
            <summary>
            The STANDARD storage class, which is the default
            storage class for CS objects. Provides a 99.999999999%
            durability guarantee.
            </summary>
        </member>
        <member name="F:GrandCloud.CS.Model.CSStorageClass.ReducedRedundancy">
            <summary>
            The REDUCED_REDUNDANCY storage class for CS objects. This
            provides a reduced (99.99%) durability guarantee at a lower
            cost as compared to the STANDARD storage class. Use this
            storage class for non-mission critical data or for data 
            that doesn’t require the higher level of durability that CS
            provides with the STANDARD storage class.
            </summary>
        </member>
    </members>
</doc>
